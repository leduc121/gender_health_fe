{
    "openapi": "3.0.0",
    "paths": {
        "/": {
            "get": {
                "operationId": "AppController_getHello",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "App"
                ]
            }
        },
        "/appointments": {
            "post": {
                "description": "Đặt cuộc hẹn với tư vấn viên. Có thể đặt tư vấn tổng quát (không truyền serviceIds) hoặc tư vấn có dịch vụ cụ thể (truyền serviceIds).",
                "operationId": "AppointmentsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully."
                    },
                    "400": {
                        "description": "Consultant not available or specialty mismatch."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission ( Customer only )."
                    },
                    "404": {
                        "description": "Consultant not found or not available."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Book an appointment with selected consultant",
                "tags": [
                    "Appointments"
                ]
            },
            "get": {
                "operationId": "AppointmentsController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo ID của khách hàng.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consultantId",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo ID của tư vấn viên.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo trạng thái cuộc hẹn.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo ngày bắt đầu (YYYY-MM-DD).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toDate",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo ngày kết thúc (YYYY-MM-DD).",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "appointmentDate",
                            "type": "string",
                            "enum": [
                                "appointmentDate",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of appointments (role-based access)",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/available-slots": {
            "post": {
                "description": "Tìm kiếm các slot tư vấn khả dụng. Để trống serviceIds cho tư vấn tổng quát, hoặc truyền serviceIds cho tư vấn có dịch vụ cụ thể.",
                "operationId": "AppointmentsController_findAvailableSlots",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindAvailableSlotsDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Available slots retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindAvailableSlotsResponseDto"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission ( Customer only )."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Find available consultation slots",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/me/{id}": {
            "get": {
                "operationId": "AppointmentsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get appointment details",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/consultant/my-appointments": {
            "get": {
                "operationId": "AppointmentsController_getConsultantAppointments",
                "parameters": [
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Filter by appointment status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "checked_in",
                                "in_progress",
                                "completed",
                                "cancelled",
                                "rescheduled",
                                "no_show"
                            ]
                        }
                    },
                    {
                        "name": "dateFrom",
                        "required": false,
                        "in": "query",
                        "description": "Filter by appointment date (from)",
                        "schema": {
                            "example": "2024-01-01",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dateTo",
                        "required": false,
                        "in": "query",
                        "description": "Filter by appointment date (to)",
                        "schema": {
                            "example": "2024-12-31",
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Field to sort by",
                        "schema": {
                            "default": "appointmentDate",
                            "type": "string",
                            "enum": [
                                "status",
                                "appointmentDate",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "default": "ASC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Consultant appointments retrieved successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get consultant appointments",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}": {
            "get": {
                "operationId": "AppointmentsController_findOneById",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get appointment details",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/chat-room": {
            "get": {
                "operationId": "AppointmentsController_getChatRoom",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get chat room for an appointment",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/status": {
            "patch": {
                "operationId": "AppointmentsController_updateStatus",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment status updated successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission ( Admin, Manager, Consultant, Staff only )."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update appointment status (e.g., confirm, complete)",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/cancel": {
            "patch": {
                "operationId": "AppointmentsController_cancel",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment canceled successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission ( Customer, Admin, Manager only )."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Cancel an appointment",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/check-in": {
            "post": {
                "description": "Check-in bệnh nhân tại cơ sở y tế (Staff/Consultant only)",
                "operationId": "AppointmentsController_checkInPatient",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckInAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient checked in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckInResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Appointment cannot be checked in (invalid status, already checked in, etc.)"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Staff/Admin/Manager/Consultant only)"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Check-in patient for appointment",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/mark-no-show": {
            "post": {
                "description": "Đánh dấu appointment là no-show (Staff/Admin/Manager/Consultant only)",
                "operationId": "AppointmentsController_markNoShow",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarkNoShowDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment marked as no-show successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoShowProcessResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Appointment cannot be marked as no-show (invalid status)"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Staff/Admin/Manager/Consultant only)"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Mark appointment as no-show",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/late-check-in": {
            "post": {
                "description": "Xử lý check-in trễ cho appointment (Staff/Admin/Manager/Consultant only)",
                "operationId": "AppointmentsController_processLateCheckIn",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LateCheckInDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Late check-in processed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LateCheckInResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Late check-in cannot be processed (too late, invalid status, etc.)"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Staff/Admin/Manager only)"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Process late check-in for appointment",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/appointments/{id}/meeting-link": {
            "patch": {
                "operationId": "AppointmentsController_updateMeetingLink",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMeetingLinkDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Meeting link updated successfully."
                    },
                    "400": {
                        "description": "Invalid meeting link or insufficient permissions."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant/Admin/Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update meeting link for appointment",
                "tags": [
                    "Appointments"
                ]
            },
            "get": {
                "description": "Lấy meeting link của cuộc hẹn (chỉ những người liên quan)",
                "operationId": "AppointmentsController_getMeetingLink",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting link retrieved successfully."
                    },
                    "400": {
                        "description": "Insufficient permissions to view meeting link."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get meeting link for appointment",
                "tags": [
                    "Appointments"
                ]
            },
            "delete": {
                "description": "Xóa meeting link của cuộc hẹn (Consultant/Admin/Manager only)",
                "operationId": "AppointmentsController_removeMeetingLink",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meeting link removed successfully."
                    },
                    "400": {
                        "description": "Insufficient permissions to remove meeting link."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant/Admin/Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Remove meeting link from appointment",
                "tags": [
                    "Appointments"
                ]
            }
        },
        "/sti-appointments": {
            "post": {
                "description": "Tạo lịch hẹn mới cho việc xét nghiệm STI",
                "operationId": "StiAppointmentsController_createStiAppointment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateStiAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lịch hẹn STI đã được tạo thành công",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Dữ liệu đầu vào không hợp lệ"
                    },
                    "404": {
                        "description": "Không tìm thấy dịch vụ hoặc tư vấn viên"
                    },
                    "409": {
                        "description": "Có xung đột với lịch hẹn khác"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Đặt lịch xét nghiệm STI",
                "tags": [
                    "STI Appointments"
                ]
            },
            "get": {
                "description": "Lấy tất cả lịch hẹn xét nghiệm STI của người dùng hiện tại",
                "operationId": "StiAppointmentsController_getUserStiAppointments",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Danh sách lịch hẹn STI",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Appointment"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Lấy danh sách lịch hẹn STI",
                "tags": [
                    "STI Appointments"
                ]
            }
        },
        "/sti-appointments/{id}": {
            "delete": {
                "description": "Hủy lịch hẹn xét nghiệm STI đã đặt",
                "operationId": "StiAppointmentsController_cancelStiAppointment",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID của lịch hẹn STI cần hủy",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "description": "Thông tin hủy lịch hẹn",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelStiAppointmentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hủy lịch hẹn STI thành công"
                    },
                    "400": {
                        "description": "Không thể hủy lịch hẹn này"
                    },
                    "404": {
                        "description": "Không tìm thấy lịch hẹn"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Hủy lịch hẹn STI",
                "tags": [
                    "STI Appointments"
                ]
            },
            "get": {
                "description": "Lấy thông tin chi tiết của một lịch hẹn STI cụ thể",
                "operationId": "StiAppointmentsController_getStiAppointmentById",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID của lịch hẹn STI",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Thông tin chi tiết lịch hẹn STI",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Không tìm thấy lịch hẹn"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Lấy thông tin chi tiết lịch hẹn STI",
                "tags": [
                    "STI Appointments"
                ]
            }
        },
        "/chat/questions": {
            "post": {
                "operationId": "ChatController_createQuestion",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateQuestionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question created successfully."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new question",
                "tags": [
                    "Chat"
                ]
            },
            "get": {
                "operationId": "ChatController_getUserQuestions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get questions that the current user has access to",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/messages": {
            "post": {
                "operationId": "ChatController_sendMessage",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateChatDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message sent successfully"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "404": {
                        "description": "Question not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Send a text message to a question chat",
                "tags": [
                    "Chat"
                ]
            },
            "get": {
                "operationId": "ChatController_getMessages",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "default": 1,
                            "example": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of messages per page",
                        "schema": {
                            "minimum": 1,
                            "maximum": 100,
                            "default": 50,
                            "example": 50,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get message history for a question",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/messages/file": {
            "post": {
                "operationId": "ChatController_sendFileMessage",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SendFileMessageBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Send a file or image message to a question chat",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/messages/public-pdf": {
            "post": {
                "operationId": "ChatController_sendPublicPdfMessage",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SendPublicPdfMessageBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Public PDF message sent successfully"
                    },
                    "400": {
                        "description": "Invalid file type - only PDF files are allowed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Send a public PDF message to a question chat",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/messages/with-urls": {
            "get": {
                "description": "Get messages with enhanced file URLs, especially useful for public PDFs",
                "operationId": "ChatController_getMessagesWithFileUrls",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "default": 1,
                            "example": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of messages per page",
                        "schema": {
                            "minimum": 1,
                            "maximum": 100,
                            "default": 50,
                            "example": 50,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages with file URLs retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get message history with file URLs for a question",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/messages/{messageId}/read": {
            "patch": {
                "operationId": "ChatController_markMessageAsRead",
                "parameters": [
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as read"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Mark message as read",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/messages/read-all": {
            "patch": {
                "operationId": "ChatController_markAllMessagesAsRead",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All messages marked as read"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Mark all messages in a question as read",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/messages/{messageId}": {
            "delete": {
                "operationId": "ChatController_deleteMessage",
                "parameters": [
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message deleted successfully"
                    },
                    "403": {
                        "description": "Cannot delete this message"
                    },
                    "404": {
                        "description": "Message not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a message (soft delete)",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/questions/{questionId}/summary": {
            "get": {
                "operationId": "ChatController_getQuestionSummary",
                "parameters": [
                    {
                        "name": "questionId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Summary retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get question chat summary with last message",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/messages/unread-count": {
            "get": {
                "operationId": "ChatController_getUnreadCount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Unread count retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get unread message count for current user",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/chat/messages/{messageId}/file": {
            "get": {
                "operationId": "ChatController_getMessageFile",
                "parameters": [
                    {
                        "name": "messageId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File URL retrieved successfully"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Download file from message",
                "tags": [
                    "Chat"
                ]
            }
        },
        "/files/image": {
            "post": {
                "operationId": "FilesController_uploadImage",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadImageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Upload an image file",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/document": {
            "post": {
                "operationId": "FilesController_uploadDocument",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadDocumentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Upload a document file",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/public-pdf": {
            "post": {
                "description": "Upload a PDF file to public bucket for direct access without queue processing",
                "operationId": "FilesController_uploadPublicPdf",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadPublicPdfDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Upload a public PDF file",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/images/entity": {
            "get": {
                "operationId": "FilesController_getImagesByEntity",
                "parameters": [
                    {
                        "name": "entityType",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includePrivate",
                        "required": false,
                        "in": "query",
                        "description": "Include private images (admin only)",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of images by a specific entity",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/documents/entity": {
            "get": {
                "operationId": "FilesController_getDocumentsByEntity",
                "parameters": [
                    {
                        "name": "entityType",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of documents by a specific entity",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/public-pdfs/entity": {
            "get": {
                "description": "Retrieve all public PDF files for a specific entity",
                "operationId": "FilesController_getPublicPdfsByEntity",
                "parameters": [
                    {
                        "name": "entityType",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of public PDFs by a specific entity",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/public-pdf/{id}": {
            "get": {
                "description": "Get public PDF information with direct access URL",
                "operationId": "FilesController_getPublicPdf",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get public PDF details with access URL",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/image/{id}/access": {
            "get": {
                "description": "Returns a public URL for public images, signed URL for private images",
                "operationId": "FilesController_getImageAccessUrl",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiresIn",
                        "required": false,
                        "in": "query",
                        "description": "Expiration time for signed URL (seconds), default 3600",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get an access URL for an image (public URL or signed URL)",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/document/{id}/access": {
            "get": {
                "description": "Returns a signed URL with expiration time to access the document",
                "operationId": "FilesController_getDocumentAccessUrl",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "expiresIn",
                        "required": false,
                        "in": "query",
                        "description": "Expiration time for signed URL (seconds), default 3600",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get an access URL for a document (signed URL)",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/image/{id}": {
            "delete": {
                "operationId": "FilesController_deleteImage",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete an image (soft delete)",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/document/{id}": {
            "delete": {
                "operationId": "FilesController_deleteDocument",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a document (soft delete)",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/download/{id}": {
            "get": {
                "operationId": "FilesController_downloadFile",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "enum": [
                                "image",
                                "document"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Download the content of a file (image or document)",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/public-pdf/{id}/download": {
            "get": {
                "description": "Download the actual PDF file content",
                "operationId": "FilesController_downloadPublicPdf",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "inline",
                        "required": false,
                        "in": "query",
                        "description": "Display inline in browser instead of download",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Download public PDF file",
                "tags": [
                    "Files"
                ]
            }
        },
        "/files/test/upload": {
            "post": {
                "operationId": "FilesController_testUpload",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TestUploadDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "summary": "Test upload file to AWS S3",
                "tags": [
                    "Files"
                ]
            }
        },
        "/auth/register": {
            "post": {
                "operationId": "AuthController_register",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Email validation failed"
                    },
                    "409": {
                        "description": "Email already exists"
                    }
                },
                "summary": "Register a new user account",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/login": {
            "post": {
                "operationId": "AuthController_login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials or account locked"
                    }
                },
                "summary": "Login user and get access tokens",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/verify-email": {
            "get": {
                "operationId": "AuthController_verifyEmail",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "query",
                        "description": "Email verification token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Email verified successfully, redirecting to frontend"
                    },
                    "400": {
                        "description": "Invalid or expired verification token"
                    }
                },
                "summary": "Verify user email with token and redirect to frontend",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/resend-verification": {
            "post": {
                "operationId": "AuthController_resendVerification",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendVerificationDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent"
                    },
                    "404": {
                        "description": "Email not found"
                    }
                },
                "summary": "Resend email verification",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/forgot-password": {
            "post": {
                "operationId": "AuthController_forgotPassword",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent (or message for security)"
                    }
                },
                "summary": "Request password reset",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/reset-password/{token}": {
            "put": {
                "operationId": "AuthController_resetPassword",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "path",
                        "description": "Password reset token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful"
                    },
                    "400": {
                        "description": "Invalid or expired reset token"
                    }
                },
                "summary": "Reset password with token",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/reset-password": {
            "get": {
                "operationId": "AuthController_handlePasswordResetRedirect",
                "parameters": [
                    {
                        "name": "token",
                        "required": true,
                        "in": "query",
                        "description": "Password reset token",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirecting to frontend password reset page"
                    }
                },
                "summary": "Handle password reset link from email and redirect to frontend",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/refresh-token": {
            "put": {
                "operationId": "AuthController_refreshToken",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshTokenDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    },
                    "401": {
                        "description": "Invalid refresh token"
                    }
                },
                "summary": "Refresh access token",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "operationId": "AuthController_logout",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    }
                },
                "summary": "Logout user and invalidate refresh token",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/me": {
            "get": {
                "operationId": "AuthController_getProfile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully"
                    },
                    "401": {
                        "description": "User not authenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get current authenticated user profile",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/auth/google/authenticate": {
            "post": {
                "operationId": "GoogleAuthenticationController_authenticate",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GoogleTokenDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                },
                "summary": "Authenticate with Google token",
                "tags": [
                    "Authentication"
                ]
            }
        },
        "/users": {
            "post": {
                "operationId": "UsersController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new user",
                "tags": [
                    "Users"
                ]
            },
            "get": {
                "operationId": "UsersController_findAll",
                "parameters": [
                    {
                        "name": "firstName",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lastName",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleId",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isActive",
                        "required": false,
                        "in": "query",
                        "description": "Filter by active status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "firstName",
                                "lastName",
                                "email",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all users with pagination and filters",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/bulk": {
            "post": {
                "operationId": "UsersController_createMany",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateManyUsersDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Users created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create multiple users",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/slug/{slug}": {
            "get": {
                "operationId": "UsersController_findBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get user by slug",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/me": {
            "get": {
                "operationId": "UsersController_getProfile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Current user profile retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get current user profile",
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "operationId": "UsersController_updateProfile",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cập nhật thông tin cá nhân thành công"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update current user profile",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/me/change-password": {
            "put": {
                "operationId": "UsersController_changePassword",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cập nhật mật khẩu thành công"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Change current user password",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/me/health-data-consent": {
            "patch": {
                "description": "Cập nhật trạng thái đồng ý cho việc thu thập dữ liệu sức khỏe",
                "operationId": "UsersController_updateHealthDataConsent",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHealthDataConsentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cập nhật trạng thái đồng ý thành công"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update health data consent",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "operationId": "UsersController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "403": {
                        "description": "Forbidden access to this resource (only Admin/Manager/Staff can access)"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get user by ID",
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "operationId": "UsersController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update user by ID (Admin/Manager only)",
                "tags": [
                    "Users"
                ]
            },
            "delete": {
                "operationId": "UsersController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete user (Admin only)",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}/toggle-active": {
            "put": {
                "operationId": "UsersController_toggleActive",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User status updated successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Toggle user active status (Admin/Manager only)",
                "tags": [
                    "Users"
                ]
            }
        },
        "/users/{id}/verify-email": {
            "put": {
                "operationId": "UsersController_verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Verify user email (Admin/Manager only)",
                "tags": [
                    "Users"
                ]
            }
        },
        "/user-dashboard/overview": {
            "get": {
                "operationId": "UserDashboardController_getDashboardOverview",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/customers": {
            "get": {
                "operationId": "UserDashboardController_getCustomerDashboard",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/consultants": {
            "get": {
                "operationId": "UserDashboardController_getConsultantDashboard",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/customers/period": {
            "get": {
                "operationId": "UserDashboardController_getCustomerStatsByPeriod",
                "parameters": [
                    {
                        "name": "startDate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/consultants/period": {
            "get": {
                "operationId": "UserDashboardController_getConsultantStatsByPeriod",
                "parameters": [
                    {
                        "name": "startDate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/stats/gender": {
            "get": {
                "operationId": "UserDashboardController_getUserStatsByGender",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/stats/registration-trend": {
            "get": {
                "operationId": "UserDashboardController_getUserRegistrationTrend",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/stats/active-by-period": {
            "get": {
                "operationId": "UserDashboardController_getUserActiveStatsByPeriod",
                "parameters": [
                    {
                        "name": "periodType",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "month",
                            "type": "string",
                            "enum": [
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    },
                    {
                        "name": "periodCount",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "includeCurrentPeriod",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/stats/active-comparison": {
            "get": {
                "operationId": "UserDashboardController_getUserActiveStatsComparison",
                "parameters": [
                    {
                        "name": "periodType",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "default": "month",
                            "type": "string",
                            "enum": [
                                "month",
                                "quarter",
                                "year"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/user-dashboard/stats/total-active-by-role": {
            "get": {
                "operationId": "UserDashboardController_getTotalActiveUsersByRole",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "tags": [
                    "User Dashboard"
                ]
            }
        },
        "/audit-logs": {
            "get": {
                "operationId": "AuditLogsController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by user ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "required": false,
                        "in": "query",
                        "description": "Filter by action type (e.g., CREATE, UPDATE)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityType",
                        "required": false,
                        "in": "query",
                        "description": "Filter by entity type (e.g., User, Blog)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "required": false,
                        "in": "query",
                        "description": "Filter by start date (ISO 8601 format)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": false,
                        "in": "query",
                        "description": "Filter by end date (ISO 8601 format)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "action",
                                "entityType",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all audit logs with filtering and pagination",
                "tags": [
                    "Audit Logs"
                ]
            }
        },
        "/audit-logs/{id}": {
            "get": {
                "operationId": "AuditLogsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a single audit log by ID",
                "tags": [
                    "Audit Logs"
                ]
            },
            "patch": {
                "operationId": "AuditLogsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAuditLogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Audit log updated successfully."
                    },
                    "403": {
                        "description": "Forbidden."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update an audit log (Admin only)",
                "tags": [
                    "Audit Logs"
                ]
            },
            "delete": {
                "operationId": "AuditLogsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit log deleted successfully."
                    },
                    "403": {
                        "description": "Forbidden."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete an audit log (Admin only)",
                "tags": [
                    "Audit Logs"
                ]
            }
        },
        "/notifications": {
            "get": {
                "operationId": "NotificationsController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all notifications for the current user",
                "tags": [
                    "Notifications"
                ]
            }
        },
        "/notifications/unread-count": {
            "get": {
                "operationId": "NotificationsController_getUnreadCount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get unread notifications count",
                "tags": [
                    "Notifications"
                ]
            }
        },
        "/notifications/mark-all-as-read": {
            "patch": {
                "operationId": "NotificationsController_markAllAsRead",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Mark all notifications as read",
                "tags": [
                    "Notifications"
                ]
            }
        },
        "/notifications/{id}/mark-as-read": {
            "patch": {
                "operationId": "NotificationsController_markAsRead",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Mark a notification as read",
                "tags": [
                    "Notifications"
                ]
            }
        },
        "/notifications/{id}": {
            "delete": {
                "operationId": "NotificationsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a notification",
                "tags": [
                    "Notifications"
                ]
            }
        },
        "/payments/webhook": {
            "post": {
                "operationId": "PaymentsController_handleWebhook",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookTypeDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully"
                    }
                },
                "summary": "PayOS webhook endpoint",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/callback/success": {
            "get": {
                "description": "Callback từ PayOS khi thanh toán thành công",
                "operationId": "PaymentsController_handleSuccessCallback",
                "parameters": [
                    {
                        "name": "orderCode",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Payment success callback",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/callback/cancel": {
            "get": {
                "description": "Callback từ PayOS khi thanh toán bị hủy",
                "operationId": "PaymentsController_handleCancelCallback",
                "parameters": [
                    {
                        "name": "orderCode",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Payment cancel callback",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/available-packages": {
            "get": {
                "operationId": "PaymentsController_getAvailablePackages",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Tìm kiếm theo tên gói",
                        "schema": {
                            "example": "Basic Health",
                            "type": "string"
                        }
                    },
                    {
                        "name": "isActive",
                        "required": false,
                        "in": "query",
                        "description": "Chỉ lấy các gói đang hoạt động",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available packages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPayablePackagesDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get available service packages",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/available-services": {
            "get": {
                "operationId": "PaymentsController_getAvailableServices",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Tìm kiếm theo tên gói",
                        "schema": {
                            "example": "Basic Health",
                            "type": "string"
                        }
                    },
                    {
                        "name": "isActive",
                        "required": false,
                        "in": "query",
                        "description": "Chỉ lấy các gói đang hoạt động",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetPayablePackagesDto"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get available services",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/pending-appointments": {
            "get": {
                "description": "Lấy danh sách cuộc hẹn chờ thanh toán của tài khoản này",
                "operationId": "PaymentsController_getPendingAppointments",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Pending appointments retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get pending appointments",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/user-stats": {
            "get": {
                "description": "Lấy thống kê thanh toán của tài khoản này",
                "operationId": "PaymentsController_getUserPaymentStats",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User payment statistics retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get user payment statistics",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/my-payments": {
            "get": {
                "description": "Lấy danh sách thanh toán của tài khoản này",
                "operationId": "PaymentsController_getMyPayments",
                "parameters": [
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo trạng thái thanh toán",
                        "schema": {
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed",
                                "refunded",
                                "cancelled"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User payments retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get my payments",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/admin/all": {
            "get": {
                "description": "Lấy tất cả thanh toán trong hệ thống - chỉ dành cho admin, manager",
                "operationId": "PaymentsController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All payments retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "403": {
                        "description": "Forbidden access - admin or manager only"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all payments",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/packages": {
            "post": {
                "description": "Tạo thanh toán cho gói dịch vụ",
                "operationId": "PaymentsController_createPackagePayment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePackagePaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment link created successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create package payment",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/appointments": {
            "post": {
                "description": "Tạo thanh toán cho cuộc hẹn",
                "operationId": "PaymentsController_createAppointmentPayment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppointmentPaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment link created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create appointment payment",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/services": {
            "post": {
                "description": "Tạo thanh toán cho dịch vụ đơn lẻ",
                "operationId": "PaymentsController_createServicePayment",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServicePaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment link created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create service payment",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/{id}/details": {
            "get": {
                "description": "Lấy chi tiết thanh toán của tài khoản này",
                "operationId": "PaymentsController_getMyPaymentDetails",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully"
                    },
                    "404": {
                        "description": "Payment not found or access denied"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get payment details",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/{id}/status": {
            "get": {
                "description": "Kiểm tra trạng thái thanh toán của tài khoản này",
                "operationId": "PaymentsController_checkMyPaymentStatus",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Check payment status",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/{id}": {
            "get": {
                "description": "Lấy thanh toán theo ID - chỉ dành cho admin, manager",
                "operationId": "PaymentsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "403": {
                        "description": "Forbidden access - admin or manager only"
                    },
                    "404": {
                        "description": "Payment not found or access denied"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get payment by ID (Admin, Manager only)",
                "tags": [
                    "Payments"
                ]
            },
            "delete": {
                "description": "Xóa thanh toán - chỉ dành cho admin",
                "operationId": "PaymentsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "403": {
                        "description": "Forbidden access - admin only"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete payment (Admin only)",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/{id}/cancel": {
            "patch": {
                "description": "Hủy thanh toán đang chờ xử lý",
                "operationId": "PaymentsController_cancelPayment",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancelPaymentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Hủy thanh toán thành công"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cannot cancel payment (not pending or already processed)"
                    },
                    "401": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Payment not found or access denied"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Cancel payment",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/payments/{path}": {
            "get": {
                "description": "Bắt các route không hợp lệ",
                "operationId": "PaymentsController_handleInvalidRoutes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Catch invalid routes",
                "tags": [
                    "Payments"
                ]
            }
        },
        "/service-packages": {
            "post": {
                "operationId": "ServicePackagesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServicePackageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service package created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateServicePackageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new service package",
                "tags": [
                    "Service Packages"
                ]
            },
            "get": {
                "operationId": "ServicePackagesController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang, mặc định là 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số bản ghi mỗi trang, mặc định là 10",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Trường sắp xếp (name, price, durationMonths, createdAt, updatedAt)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Thứ tự sắp xếp, mặc định là DESC",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Từ khóa tìm kiếm trong tên",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minPrice",
                        "required": false,
                        "in": "query",
                        "description": "Giá tối thiểu",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxPrice",
                        "required": false,
                        "in": "query",
                        "description": "Giá tối đa",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "isActive",
                        "required": false,
                        "in": "query",
                        "description": "Trạng thái hoạt động của gói dịch vụ",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service packages retrieved successfully"
                    }
                },
                "summary": "Get a list of service packages with pagination and filters",
                "tags": [
                    "Service Packages"
                ]
            }
        },
        "/service-packages/{id}": {
            "get": {
                "operationId": "ServicePackagesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Service package ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service package retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateServicePackageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid service package ID format"
                    },
                    "404": {
                        "description": "Service package not found"
                    }
                },
                "summary": "Get a service package by ID",
                "tags": [
                    "Service Packages"
                ]
            },
            "patch": {
                "operationId": "ServicePackagesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Service package ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServicePackageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service package updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateServicePackageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid service package ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    },
                    "404": {
                        "description": "Service package not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a service package by ID",
                "tags": [
                    "Service Packages"
                ]
            },
            "delete": {
                "operationId": "ServicePackagesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Service package ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service package deleted successfully"
                    },
                    "400": {
                        "description": "Invalid service package ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin can perform this action"
                    },
                    "404": {
                        "description": "Service package not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a service package by ID",
                "tags": [
                    "Service Packages"
                ]
            }
        },
        "/user-package-subscriptions": {
            "post": {
                "operationId": "UserPackageSubscriptionsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserPackageSubscriptionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User package subscription created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserPackageSubscriptionDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new user package subscription",
                "tags": [
                    "User Package Subscriptions"
                ]
            },
            "get": {
                "operationId": "UserPackageSubscriptionsController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User package subscriptions retrieved successfully"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of all user package subscriptions",
                "tags": [
                    "User Package Subscriptions"
                ]
            }
        },
        "/user-package-subscriptions/{id}": {
            "get": {
                "operationId": "UserPackageSubscriptionsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Subscription ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User package subscription retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserPackageSubscriptionDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid subscription ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Customer, Staff, Manager, or Admin can perform this action"
                    },
                    "404": {
                        "description": "User package subscription not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a user package subscription by ID",
                "tags": [
                    "User Package Subscriptions"
                ]
            },
            "patch": {
                "operationId": "UserPackageSubscriptionsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Subscription ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserPackageSubscriptionDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User package subscription updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserPackageSubscriptionDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid subscription ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    },
                    "404": {
                        "description": "User package subscription not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a user package subscription by ID",
                "tags": [
                    "User Package Subscriptions"
                ]
            },
            "delete": {
                "operationId": "UserPackageSubscriptionsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Subscription ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User package subscription deleted successfully"
                    },
                    "400": {
                        "description": "Invalid subscription ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin can perform this action"
                    },
                    "404": {
                        "description": "User package subscription not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a user package subscription by ID",
                "tags": [
                    "User Package Subscriptions"
                ]
            }
        },
        "/user-package-subscriptions/status/{userId}": {
            "get": {
                "operationId": "UserPackageSubscriptionsController_getStatus",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "description": "User ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User package subscription status retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid user ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Customer, Staff, Manager, or Admin can perform this action"
                    },
                    "404": {
                        "description": "User not found or no active subscription"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get subscription status for a user",
                "tags": [
                    "User Package Subscriptions"
                ]
            }
        },
        "/blogs": {
            "post": {
                "operationId": "BlogsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBlogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blog created successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, Manager, or Consultant only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new blog",
                "tags": [
                    "Blogs"
                ]
            },
            "get": {
                "operationId": "BlogsController_findAll",
                "parameters": [
                    {
                        "name": "title",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "pending_review",
                                "needs_revision",
                                "rejected",
                                "approved",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "categoryId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by category ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "description": "Filter by tags (comma-separated list, e.g., health,fitness)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "updatedAt",
                                "views",
                                "title",
                                "publishedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Published blogs retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all published blogs (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/published": {
            "get": {
                "operationId": "BlogsController_findAllPublished",
                "parameters": [
                    {
                        "name": "title",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "pending_review",
                                "needs_revision",
                                "rejected",
                                "approved",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "categoryId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by category ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "description": "Filter by tags (comma-separated list, e.g., health,fitness)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "updatedAt",
                                "views",
                                "title",
                                "publishedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Published blogs retrieved successfully"
                    }
                },
                "summary": "Get all published blogs (Public access)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/slug/{slug}": {
            "get": {
                "operationId": "BlogsController_findPublishedBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Published blog retrieved successfully"
                    }
                },
                "summary": "Get published blog by slug (Public access with view count)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/pending-review": {
            "get": {
                "operationId": "BlogsController_findAllPendingReview",
                "parameters": [
                    {
                        "name": "title",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Filter by blog status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "pending_review",
                                "needs_revision",
                                "rejected",
                                "approved",
                                "published",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "categoryId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by category ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "description": "Filter by tags (comma-separated list, e.g., health,fitness)",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "updatedAt",
                                "views",
                                "title",
                                "publishedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pending review blogs retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all blogs pending review (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/stats/monthly": {
            "get": {
                "operationId": "BlogsController_getMonthlyBlogStats",
                "parameters": [
                    {
                        "name": "month",
                        "required": false,
                        "in": "query",
                        "description": "Month number (1-12)",
                        "schema": {
                            "example": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "year",
                        "required": false,
                        "in": "query",
                        "description": "Year",
                        "schema": {
                            "example": 2025,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly blog statistics retrieved successfully"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get monthly blog statistics",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/image/{id}": {
            "patch": {
                "operationId": "BlogsController_syncBlogImages",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Synchronize image to blog",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/image": {
            "post": {
                "operationId": "BlogsController_addImageToBlog",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBlogImageDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "summary": "Add image to blog",
                "tags": [
                    "Blogs"
                ]
            },
            "put": {
                "operationId": "BlogsController_removeImageFromBlog",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBlogImageDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Delete image from blog",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}": {
            "get": {
                "operationId": "BlogsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog retrieved successfully"
                    }
                },
                "summary": "Get blog by ID",
                "tags": [
                    "Blogs"
                ]
            },
            "patch": {
                "operationId": "BlogsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBlogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog updated successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update blog by ID (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            },
            "delete": {
                "operationId": "BlogsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Blog deleted successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete blog (Admin or Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/view": {
            "patch": {
                "operationId": "BlogsController_incrementViewCount",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog view count incremented successfully"
                    }
                },
                "summary": "Increment blog view count",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/submit-review": {
            "patch": {
                "operationId": "BlogsController_submitForReview",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog submitted for review successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Submit blog for review (Author only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/review": {
            "patch": {
                "operationId": "BlogsController_reviewBlog",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewBlogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog reviewed successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Review blog (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/publish": {
            "patch": {
                "operationId": "BlogsController_publishBlog",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishBlogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog published successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Publish approved blog (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/direct-publish": {
            "patch": {
                "operationId": "BlogsController_directPublishBlog",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PublishBlogDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Blog published directly from draft successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Directly publish blog from DRAFT (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/blogs/{id}/archive": {
            "patch": {
                "operationId": "BlogsController_archiveBlog",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog archived successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Archive blog (Admin/Manager only)",
                "tags": [
                    "Blogs"
                ]
            }
        },
        "/images/{id}": {
            "get": {
                "operationId": "ImagesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get image metadata by ID",
                "tags": [
                    "Images"
                ]
            },
            "patch": {
                "operationId": "ImagesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateImageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update image metadata (e.g., alt text)",
                "tags": [
                    "Images"
                ]
            },
            "delete": {
                "operationId": "ImagesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete an image and its file from storage",
                "tags": [
                    "Images"
                ]
            }
        },
        "/images/entity/{entityType}/{entityId}": {
            "get": {
                "operationId": "ImagesController_findByEntity",
                "parameters": [
                    {
                        "name": "entityType",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all images for a specific entity",
                "tags": [
                    "Images"
                ]
            }
        },
        "/tags": {
            "post": {
                "operationId": "TagsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTagDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tag created successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, Manager, or Consultant only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new tag",
                "tags": [
                    "Tags"
                ]
            },
            "get": {
                "operationId": "TagsController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Tags retrieved successfully"
                    }
                },
                "summary": "Get all tags",
                "tags": [
                    "Tags"
                ]
            }
        },
        "/tags/{id}": {
            "get": {
                "operationId": "TagsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tag retrieved successfully"
                    }
                },
                "summary": "Get tag by ID",
                "tags": [
                    "Tags"
                ]
            },
            "patch": {
                "operationId": "TagsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tag updated successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update tag by ID",
                "tags": [
                    "Tags"
                ]
            },
            "delete": {
                "operationId": "TagsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tag deleted successfully"
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete tag by ID",
                "tags": [
                    "Tags"
                ]
            }
        },
        "/categories": {
            "post": {
                "operationId": "CategoriesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategoryDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new category",
                "tags": [
                    "Categories"
                ]
            },
            "get": {
                "operationId": "CategoriesController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of all active categories."
                    }
                },
                "summary": "Get all active categories",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/type/{type}": {
            "get": {
                "operationId": "CategoriesController_findByType",
                "parameters": [
                    {
                        "name": "type",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories found by type."
                    }
                },
                "summary": "Get categories by type",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/tree/all": {
            "get": {
                "operationId": "CategoriesController_getCategoryTree",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Category tree structure."
                    }
                },
                "summary": "Get category tree structure",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/stats/counts": {
            "get": {
                "operationId": "CategoriesController_getCategoriesWithCounts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Categories with counts of related items."
                    }
                },
                "summary": "Get categories with item counts",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/{id}": {
            "get": {
                "operationId": "CategoriesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found successfully."
                    }
                },
                "summary": "Get active category by ID",
                "tags": [
                    "Categories"
                ]
            },
            "patch": {
                "operationId": "CategoriesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a category by ID",
                "tags": [
                    "Categories"
                ]
            },
            "delete": {
                "operationId": "CategoriesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully."
                    },
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a category by ID",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/{id}/services": {
            "get": {
                "operationId": "CategoriesController_getCategoryServices",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services in category found successfully."
                    }
                },
                "summary": "Get all services in a category",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/{id}/blogs": {
            "get": {
                "operationId": "CategoriesController_getCategoryBlogs",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blogs in category found successfully."
                    }
                },
                "summary": "Get all blogs in a category",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/categories/{id}/symptoms": {
            "get": {
                "operationId": "CategoriesController_getCategorySymptoms",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Symptoms in category found successfully."
                    }
                },
                "summary": "Get all symptoms in a category",
                "tags": [
                    "Categories"
                ]
            }
        },
        "/consultant-availability": {
            "post": {
                "operationId": "ConsultantAvailabilityController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateConsultantAvailabilityDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create availability successfully."
                    },
                    "400": {
                        "description": "Bad Request: Invalid request body or validation failed"
                    },
                    "401": {
                        "description": "Unauthorized: Only authenticated users can create availability"
                    },
                    "403": {
                        "description": "Forbidden: Just consultant can create availability"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Consultant create availability",
                "tags": [
                    "Consultant Availability"
                ]
            },
            "get": {
                "operationId": "ConsultantAvailabilityController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "consultantId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by consultant ID (Admin/Manager)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dayOfWeek",
                        "required": false,
                        "in": "query",
                        "description": "Filter by day of the week (0-6)",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "isAvailable",
                        "required": false,
                        "in": "query",
                        "description": "Filter by availability status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location",
                        "required": false,
                        "in": "query",
                        "description": "Filter by location",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "default": "dayOfWeek",
                            "type": "string",
                            "enum": [
                                "dayOfWeek",
                                "startTime",
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "default": "ASC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all availability successfully."
                    }
                },
                "summary": "Consultant get all availability",
                "tags": [
                    "Consultant Availability"
                ]
            }
        },
        "/consultant-availability/consultant": {
            "get": {
                "operationId": "ConsultantAvailabilityController_findAllByConsultant",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "consultantId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by consultant ID (Admin/Manager)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dayOfWeek",
                        "required": false,
                        "in": "query",
                        "description": "Filter by day of the week (0-6)",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "isAvailable",
                        "required": false,
                        "in": "query",
                        "description": "Filter by availability status",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location",
                        "required": false,
                        "in": "query",
                        "description": "Filter by location",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "default": "dayOfWeek",
                            "type": "string",
                            "enum": [
                                "dayOfWeek",
                                "startTime",
                                "createdAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Sort order",
                        "schema": {
                            "default": "ASC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all availability successfully."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Consultant get all availability",
                "tags": [
                    "Consultant Availability"
                ]
            }
        },
        "/consultant-availability/{id}": {
            "get": {
                "operationId": "ConsultantAvailabilityController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get availability successfully."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Consultant get availability by id",
                "tags": [
                    "Consultant Availability"
                ]
            },
            "put": {
                "operationId": "ConsultantAvailabilityController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConsultantAvailabilityDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update availability successfully."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Consultant update availability",
                "tags": [
                    "Consultant Availability"
                ]
            },
            "delete": {
                "operationId": "ConsultantAvailabilityController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete availability successfully."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Consultant delete availability",
                "tags": [
                    "Consultant Availability"
                ]
            }
        },
        "/consultant-profiles/register": {
            "post": {
                "operationId": "ConsultantProfilesController_register",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterConsultantDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "summary": "Register a new consultant account",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles": {
            "post": {
                "operationId": "ConsultantProfilesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateConsultantProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            },
            "get": {
                "operationId": "ConsultantProfilesController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Search by consultant name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specialties",
                        "required": false,
                        "in": "query",
                        "description": "Lọc theo chuyên môn. Có thể truyền nhiều chuyên môn, phân cách bởi dấu phẩy (e.g., \"STIs, Nutrition\").",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minConsultationFee",
                        "required": false,
                        "in": "query",
                        "description": "Filter by minimum consultation fee",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxConsultationFee",
                        "required": false,
                        "in": "query",
                        "description": "Filter by maximum consultation fee",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "consultationTypes",
                        "required": false,
                        "in": "query",
                        "description": "Filter by location type",
                        "schema": {
                            "default": "online",
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "required": false,
                        "in": "query",
                        "description": "Filter by profile status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "on_leave",
                                "training",
                                "inactive",
                                "pending_approval",
                                "rejected"
                            ]
                        }
                    },
                    {
                        "name": "isAvailable",
                        "required": false,
                        "in": "query",
                        "description": "Filter by availability",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "minRating",
                        "required": false,
                        "in": "query",
                        "description": "Filter by minimum rating",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "rating",
                                "consultationFee",
                                "specialties",
                                "consultationTypes",
                                "status",
                                "isAvailable",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Get all consultant profiles with filters and pagination",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/me": {
            "put": {
                "operationId": "ConsultantProfilesController_updateMyProfile",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConsultantProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update my consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            },
            "get": {
                "operationId": "ConsultantProfilesController_findMyProfile",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get my consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}": {
            "get": {
                "operationId": "ConsultantProfilesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Get a single consultant profile by ID",
                "tags": [
                    "Consultant Profiles"
                ]
            },
            "patch": {
                "operationId": "ConsultantProfilesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConsultantProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            },
            "delete": {
                "operationId": "ConsultantProfilesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/pending-approval": {
            "get": {
                "operationId": "ConsultantProfilesController_findPending",
                "parameters": [],
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all pending consultant profiles for approval",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}/approve": {
            "patch": {
                "operationId": "ConsultantProfilesController_approve",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Approve a consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}/reject": {
            "patch": {
                "operationId": "ConsultantProfilesController_reject",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RejectProfileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Reject a consultant profile",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}/working-hours": {
            "patch": {
                "description": "Update working hours for a consultant and automatically generate their availability schedule for the next 4 weeks.",
                "operationId": "ConsultantProfilesController_updateWorkingHours",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkingHoursDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant, Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update working hours and auto-generate availability schedule",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}/generate-schedule": {
            "post": {
                "description": "Generate availability schedule from the pre-defined working hours",
                "operationId": "ConsultantProfilesController_generateSchedule",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateScheduleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant, Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Generate availability schedule from working hours",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/consultant-profiles/{id}/ensure-upcoming-schedule": {
            "post": {
                "description": "Ensure there is always an availability schedule for the upcoming weeks",
                "operationId": "ConsultantProfilesController_ensureUpcomingSchedule",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Forbidden: You do not have permission (Consultant, Admin, or Manager only)."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Ensure upcoming weeks have availability schedule",
                "tags": [
                    "Consultant Profiles"
                ]
            }
        },
        "/contract-files/{id}": {
            "patch": {
                "operationId": "ContractFilesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContractFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update the metadata of a contract file link (e.g., fileType)",
                "tags": [
                    "Contract Files"
                ]
            },
            "delete": {
                "operationId": "ContractFilesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Unlink a file from a contract (does not delete the file)",
                "tags": [
                    "Contract Files"
                ]
            }
        },
        "/contraceptive-reminders": {
            "post": {
                "operationId": "ContraceptiveRemindersController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateContraceptiveReminderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new contraceptive reminder",
                "tags": [
                    "Contraceptive Reminders"
                ]
            },
            "get": {
                "operationId": "ContraceptiveRemindersController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all contraceptive reminders for the current user",
                "tags": [
                    "Contraceptive Reminders"
                ]
            }
        },
        "/contraceptive-reminders/{id}": {
            "get": {
                "operationId": "ContraceptiveRemindersController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get details of a specific contraceptive reminder",
                "tags": [
                    "Contraceptive Reminders"
                ]
            },
            "put": {
                "operationId": "ContraceptiveRemindersController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContraceptiveReminderDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a contraceptive reminder",
                "tags": [
                    "Contraceptive Reminders"
                ]
            },
            "delete": {
                "operationId": "ContraceptiveRemindersController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a contraceptive reminder ( Soft delete )",
                "tags": [
                    "Contraceptive Reminders"
                ]
            }
        },
        "/cycle-symptoms": {
            "post": {
                "operationId": "CycleSymptomsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCycleSymptomDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new cycle symptom entry",
                "tags": [
                    "Cycle Symptoms"
                ]
            },
            "get": {
                "operationId": "CycleSymptomsController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    },
                    {
                        "name": "menstrualCycleId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by menstrual cycle ID",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "name": "symptomId",
                        "required": false,
                        "in": "query",
                        "description": "Filter by symptom ID",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "name": "intensity",
                        "required": false,
                        "in": "query",
                        "description": "Filter by intensity level",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "ASC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Sort by field",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "createdAt",
                                "updatedAt",
                                "intensity",
                                "symptomId",
                                "menstrualCycleId"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all cycle symptoms with optional filtering",
                "tags": [
                    "Cycle Symptoms"
                ]
            }
        },
        "/cycle-symptoms/{id}": {
            "get": {
                "operationId": "CycleSymptomsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get details of a specific cycle symptom entry",
                "tags": [
                    "Cycle Symptoms"
                ]
            },
            "patch": {
                "operationId": "CycleSymptomsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCycleSymptomDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a specific cycle symptom entry",
                "tags": [
                    "Cycle Symptoms"
                ]
            },
            "delete": {
                "operationId": "CycleSymptomsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a specific cycle symptom entry ( Soft delete )",
                "tags": [
                    "Cycle Symptoms"
                ]
            }
        },
        "/documents/{id}": {
            "get": {
                "operationId": "DocumentsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get document metadata by ID",
                "tags": [
                    "Documents"
                ]
            },
            "patch": {
                "operationId": "DocumentsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDocumentDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update document metadata",
                "tags": [
                    "Documents"
                ]
            },
            "delete": {
                "operationId": "DocumentsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a document and its file from storage",
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/entity/{entityType}/{entityId}": {
            "get": {
                "operationId": "DocumentsController_findByEntity",
                "parameters": [
                    {
                        "name": "entityType",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entityId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all documents for a specific entity",
                "tags": [
                    "Documents"
                ]
            }
        },
        "/documents/{id}/access-url": {
            "get": {
                "operationId": "DocumentsController_getAccessUrl",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a secure, temporary URL for a document",
                "tags": [
                    "Documents"
                ]
            }
        },
        "/employment-contracts": {
            "post": {
                "operationId": "EmploymentContractsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateEmploymentContractDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new employment contract",
                "tags": [
                    "Employment Contracts"
                ]
            },
            "get": {
                "operationId": "EmploymentContractsController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all employment contracts",
                "tags": [
                    "Employment Contracts"
                ]
            }
        },
        "/employment-contracts/{id}/attach-file": {
            "post": {
                "operationId": "EmploymentContractsController_attachFile",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "fileType": {
                                        "type": "string",
                                        "example": "Signed PDF"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Attach a file to an employment contract",
                "tags": [
                    "Employment Contracts"
                ]
            }
        },
        "/employment-contracts/{id}": {
            "get": {
                "operationId": "EmploymentContractsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a single contract by ID",
                "tags": [
                    "Employment Contracts"
                ]
            },
            "put": {
                "operationId": "EmploymentContractsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEmploymentContractDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a contract",
                "tags": [
                    "Employment Contracts"
                ]
            },
            "delete": {
                "operationId": "EmploymentContractsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a contract",
                "tags": [
                    "Employment Contracts"
                ]
            }
        },
        "/feedbacks": {
            "post": {
                "operationId": "FeedbacksController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFeedbackDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Feedback created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFeedbackDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Customer, Staff, Manager, or Admin can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new feedback",
                "tags": [
                    "Feedbacks"
                ]
            },
            "get": {
                "operationId": "FeedbacksController_findAll",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Page number, default is 1",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of records per page, default is 10",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Field to sort by (rating, createdAt, updatedAt)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Sort order, default is DESC",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "userId",
                        "required": false,
                        "in": "query",
                        "description": "ID of the user providing feedback",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "serviceId",
                        "required": false,
                        "in": "query",
                        "description": "ID of the service being reviewed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "appointmentId",
                        "required": false,
                        "in": "query",
                        "description": "ID of the appointment related to the feedback",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "consultantId",
                        "required": false,
                        "in": "query",
                        "description": "ID of the consultant providing the service",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minRating",
                        "required": false,
                        "in": "query",
                        "description": "Minimum rating",
                        "schema": {
                            "minimum": 1,
                            "maximum": 5,
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxRating",
                        "required": false,
                        "in": "query",
                        "description": "Maximum rating",
                        "schema": {
                            "minimum": 1,
                            "maximum": 5,
                            "type": "number"
                        }
                    },
                    {
                        "name": "isAnonymous",
                        "required": false,
                        "in": "query",
                        "description": "Whether the feedback is anonymous",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "searchComment",
                        "required": false,
                        "in": "query",
                        "description": "Search keyword in comment",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedbacks retrieved successfully"
                    }
                },
                "summary": "Get a list of feedbacks with pagination and filters",
                "tags": [
                    "Feedbacks"
                ]
            }
        },
        "/feedbacks/{id}": {
            "get": {
                "operationId": "FeedbacksController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Feedback ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateFeedbackDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid feedback ID format"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "summary": "Get a feedback by ID",
                "tags": [
                    "Feedbacks"
                ]
            },
            "patch": {
                "operationId": "FeedbacksController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Feedback ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFeedbackDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFeedbackDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid feedback ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Manager or Admin can perform this action"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a feedback by ID",
                "tags": [
                    "Feedbacks"
                ]
            },
            "delete": {
                "operationId": "FeedbacksController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Feedback ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Feedback deleted successfully"
                    },
                    "400": {
                        "description": "Invalid feedback ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin can perform this action"
                    },
                    "404": {
                        "description": "Feedback not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a feedback by ID",
                "tags": [
                    "Feedbacks"
                ]
            }
        },
        "/feedbacks/image/{id}": {
            "patch": {
                "operationId": "FeedbacksController_syncFeedbackImages",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Images synchronized successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Synchronize images to feedback",
                "tags": [
                    "Feedbacks"
                ]
            }
        },
        "/feedbacks/image": {
            "post": {
                "operationId": "FeedbacksController_addImageToFeedback",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFeedbackImageDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image added successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Add image to feedback",
                "tags": [
                    "Feedbacks"
                ]
            },
            "put": {
                "operationId": "FeedbacksController_removeImageFromFeedback",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFeedbackImageDTO"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image removed successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Remove image from feedback",
                "tags": [
                    "Feedbacks"
                ]
            }
        },
        "/menstrual-cycles": {
            "post": {
                "operationId": "MenstrualCyclesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMenstrualCycleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new menstrual cycle",
                "tags": [
                    "Menstrual Cycles"
                ]
            },
            "get": {
                "operationId": "MenstrualCyclesController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get the history of menstrual cycles for a user",
                "tags": [
                    "Menstrual Cycles"
                ]
            }
        },
        "/menstrual-cycles/{id}": {
            "get": {
                "operationId": "MenstrualCyclesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get detailed information about a cycle",
                "tags": [
                    "Menstrual Cycles"
                ]
            },
            "patch": {
                "operationId": "MenstrualCyclesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMenstrualCycleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a menstrual cycle",
                "tags": [
                    "Menstrual Cycles"
                ]
            },
            "delete": {
                "operationId": "MenstrualCyclesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a menstrual cycle",
                "tags": [
                    "Menstrual Cycles"
                ]
            }
        },
        "/menstrual-predictions/me": {
            "get": {
                "operationId": "MenstrualPredictionsController_getMyPredictions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get my menstrual predictions",
                "tags": [
                    "Menstrual Predictions"
                ]
            }
        },
        "/package-service-usage": {
            "post": {
                "operationId": "PackageServiceUsageController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePackageServiceUsageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Package service usage created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePackageServiceUsageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new package service usage record",
                "tags": [
                    "Package Service Usage"
                ]
            },
            "get": {
                "operationId": "PackageServiceUsageController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Package service usage records retrieved successfully"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a list of all package service usage records",
                "tags": [
                    "Package Service Usage"
                ]
            }
        },
        "/package-service-usage/{id}": {
            "get": {
                "operationId": "PackageServiceUsageController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service usage ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package service usage retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePackageServiceUsageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid package service usage ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    },
                    "404": {
                        "description": "Package service usage not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a package service usage record by ID",
                "tags": [
                    "Package Service Usage"
                ]
            },
            "patch": {
                "operationId": "PackageServiceUsageController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service usage ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePackageServiceUsageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Package service usage updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePackageServiceUsageDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid package service usage ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    },
                    "404": {
                        "description": "Package service usage not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a package service usage record by ID",
                "tags": [
                    "Package Service Usage"
                ]
            },
            "delete": {
                "operationId": "PackageServiceUsageController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service usage ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package service usage deleted successfully"
                    },
                    "400": {
                        "description": "Invalid package service usage ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin can perform this action"
                    },
                    "404": {
                        "description": "Package service usage not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a package service usage record by ID",
                "tags": [
                    "Package Service Usage"
                ]
            }
        },
        "/services": {
            "post": {
                "operationId": "ServicesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new service",
                "tags": [
                    "Services"
                ]
            },
            "get": {
                "operationId": "ServicesController_search",
                "parameters": [
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "description": "Trường sắp xếp (name, price, duration, createdAt, updatedAt)",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "duration",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "description": "Thứ tự sắp xếp, mặc định là DESC",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Từ khóa tìm kiếm trong tên hoặc mô tả",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "categoryId",
                        "required": false,
                        "in": "query",
                        "description": "ID của danh mục dịch vụ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "minPrice",
                        "required": false,
                        "in": "query",
                        "description": "Giá tối thiểu",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxPrice",
                        "required": false,
                        "in": "query",
                        "description": "Giá tối đa",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "isActive",
                        "required": false,
                        "in": "query",
                        "description": "Trạng thái hoạt động của dịch vụ",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "featured",
                        "required": false,
                        "in": "query",
                        "description": "Dịch vụ có được đánh dấu là nổi bật hay không",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "requiresConsultant",
                        "required": false,
                        "in": "query",
                        "description": "Dịch vụ có yêu cầu tư vấn viên hay không",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location",
                        "required": false,
                        "in": "query",
                        "description": "Địa điểm cung cấp dịch vụ",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Services retrieved successfully"
                    }
                },
                "summary": "Get a list of services with pagination and filters",
                "tags": [
                    "Services"
                ]
            }
        },
        "/services/sti": {
            "get": {
                "operationId": "ServicesController_getStiServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "STI services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Get a list of STI services",
                "tags": [
                    "Services"
                ]
            }
        },
        "/services/slug/{slug}": {
            "get": {
                "operationId": "ServicesController_findBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "required": true,
                        "in": "path",
                        "description": "Service slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Get a service by slug",
                "tags": [
                    "Services"
                ]
            }
        },
        "/services/{id}": {
            "get": {
                "operationId": "ServicesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid service ID format"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "summary": "Get a service by ID",
                "tags": [
                    "Services"
                ]
            },
            "patch": {
                "operationId": "ServicesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateServiceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid service ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a service by ID",
                "tags": [
                    "Services"
                ]
            },
            "delete": {
                "operationId": "ServicesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully"
                    },
                    "400": {
                        "description": "Invalid service ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a service by ID",
                "tags": [
                    "Services"
                ]
            }
        },
        "/services/image": {
            "post": {
                "operationId": "ServicesController_addImageToService",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceImageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Image added successfully"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "404": {
                        "description": "Service or image not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Add an image to a service",
                "tags": [
                    "Services"
                ]
            },
            "put": {
                "operationId": "ServicesController_removeImageFromService",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateServiceImageDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image removed successfully"
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "404": {
                        "description": "Service or image not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Remove an image from a service",
                "tags": [
                    "Services"
                ]
            }
        },
        "/services/image/{id}": {
            "patch": {
                "operationId": "ServicesController_syncServiceImages",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Images synchronized successfully"
                    },
                    "400": {
                        "description": "Invalid service ID format"
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Synchronize images with a service",
                "tags": [
                    "Services"
                ]
            }
        },
        "/package-services": {
            "post": {
                "operationId": "PackageServicesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePackageServiceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Package service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePackageServiceDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new package service",
                "tags": [
                    "Package Services"
                ]
            },
            "get": {
                "operationId": "PackageServicesController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Package services retrieved successfully"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    }
                },
                "summary": "Get a list of all package services",
                "tags": [
                    "Package Services"
                ]
            }
        },
        "/package-services/{id}": {
            "get": {
                "operationId": "PackageServicesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package service retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePackageServiceDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid package service ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Staff, Manager, or Admin can perform this action"
                    },
                    "404": {
                        "description": "Package service not found"
                    }
                },
                "summary": "Get a package service by ID",
                "tags": [
                    "Package Services"
                ]
            },
            "patch": {
                "operationId": "PackageServicesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePackageServiceDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Package service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatePackageServiceDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid package service ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can perform this action"
                    },
                    "404": {
                        "description": "Package service not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a package service by ID",
                "tags": [
                    "Package Services"
                ]
            },
            "delete": {
                "operationId": "PackageServicesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Package service ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Package service deleted successfully"
                    },
                    "400": {
                        "description": "Invalid package service ID format"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin can perform this action"
                    },
                    "404": {
                        "description": "Package service not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a package service by ID",
                "tags": [
                    "Package Services"
                ]
            }
        },
        "/roles": {
            "post": {
                "operationId": "RolesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new role",
                "tags": [
                    "Roles"
                ]
            },
            "get": {
                "operationId": "RolesController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all roles",
                "tags": [
                    "Roles"
                ]
            }
        },
        "/roles/{id}": {
            "get": {
                "operationId": "RolesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a role by ID",
                "tags": [
                    "Roles"
                ]
            },
            "patch": {
                "operationId": "RolesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a role by ID",
                "tags": [
                    "Roles"
                ]
            },
            "delete": {
                "operationId": "RolesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Soft delete a role by ID",
                "tags": [
                    "Roles"
                ]
            }
        },
        "/sti-test-processes": {
            "post": {
                "operationId": "StiTestProcessesController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateStiTestProcessDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Process created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create STI Test Process",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/search": {
            "post": {
                "operationId": "StiTestProcessesController_findAll",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryStiTestProcessDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of STI test processes"
                    },
                    "400": {
                        "description": "Invalid query parameters"
                    },
                    "403": {
                        "description": "Forbidden: Just admins, managers and staff can access this endpoint"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get list of STI test processes",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/test-code/{testCode}": {
            "get": {
                "operationId": "StiTestProcessesController_findByTestCode",
                "parameters": [
                    {
                        "name": "testCode",
                        "required": true,
                        "in": "path",
                        "description": "Test code",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the STI test process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI test process by code",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/patient/{patientId}": {
            "post": {
                "operationId": "StiTestProcessesController_findByPatientId",
                "parameters": [
                    {
                        "name": "patientId",
                        "required": true,
                        "in": "path",
                        "description": "Patient ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryStiTestProcessDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of STI test processes by patient ID"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get list of STI test processes by patient ID",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/{id}": {
            "get": {
                "operationId": "StiTestProcessesController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the STI test process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI test process details",
                "tags": [
                    "STIs Test Processes"
                ]
            },
            "put": {
                "operationId": "StiTestProcessesController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStiTestProcessDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "STI test process updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update STI test process information",
                "tags": [
                    "STIs Test Processes"
                ]
            },
            "delete": {
                "operationId": "StiTestProcessesController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "STI test process deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete STI test process",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/{id}/status": {
            "patch": {
                "operationId": "StiTestProcessesController_updateStatus",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "required": true,
                        "in": "query",
                        "description": "New status",
                        "schema": {
                            "enum": [
                                "ordered",
                                "sample_collection_scheduled",
                                "sample_collected",
                                "processing",
                                "result_ready",
                                "result_delivered",
                                "consultation_required",
                                "follow_up_scheduled",
                                "completed",
                                "cancelled"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update STI test process status",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/workflow/steps": {
            "get": {
                "operationId": "StiTestProcessesController_getWorkflowSteps",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of workflow steps"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get list of workflow steps",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/workflow/next-steps/{status}": {
            "get": {
                "operationId": "StiTestProcessesController_getNextSteps",
                "parameters": [
                    {
                        "name": "status",
                        "required": true,
                        "in": "path",
                        "description": "Current status",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of next steps"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get list of next workflow steps",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/{id}/workflow/transition": {
            "post": {
                "operationId": "StiTestProcessesController_transitionStatus",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status transitioned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StiTestProcessResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Transition status with workflow validation",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/booking/from-service-selection": {
            "post": {
                "operationId": "StiTestProcessesController_createFromServiceSelection",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StiTestBookingRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "STI test process created from service selection"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create STI test process from service selection",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/services/available": {
            "get": {
                "operationId": "StiTestProcessesController_getAvailableStiServices",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of available STI test services"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get available STI test services",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/services/package/{packageId}": {
            "get": {
                "operationId": "StiTestProcessesController_getStiServicesFromPackage",
                "parameters": [
                    {
                        "name": "packageId",
                        "required": true,
                        "in": "path",
                        "description": "Service package ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "STI services from package"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI services from package",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/statistics/dashboard": {
            "get": {
                "operationId": "StiTestProcessesController_getStatistics",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "STI test process statistics"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI test process statistics for dashboard",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/statistics/period": {
            "get": {
                "operationId": "StiTestProcessesController_getStatisticsByPeriod",
                "parameters": [
                    {
                        "name": "startDate",
                        "required": true,
                        "in": "query",
                        "description": "Start date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "required": true,
                        "in": "query",
                        "description": "End date (YYYY-MM-DD)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "STI test process statistics by period"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI test process statistics by period",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/sti-test-processes/statistics/patient/{patientId}": {
            "get": {
                "operationId": "StiTestProcessesController_getPatientStatistics",
                "parameters": [
                    {
                        "name": "patientId",
                        "required": true,
                        "in": "path",
                        "description": "Patient ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "STI test process statistics for patient"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get STI test process statistics for specific patient",
                "tags": [
                    "STIs Test Processes"
                ]
            }
        },
        "/test-results/templates/{serviceType}": {
            "get": {
                "description": "Lấy template chuẩn cho từng loại dịch vụ y tế để frontend sử dụng",
                "operationId": "TestResultsController_getTemplate",
                "parameters": [
                    {
                        "name": "serviceType",
                        "required": true,
                        "in": "path",
                        "description": "Type of medical service",
                        "schema": {
                            "enum": [
                                "sti_test",
                                "blood_test",
                                "urine_test",
                                "imaging",
                                "biopsy",
                                "genetic_test",
                                "hormone_test",
                                "allergy_test",
                                "cardiac_test",
                                "other"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get test result template by service type",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/validate": {
            "post": {
                "description": "Validate dữ liệu test result theo chuẩn định sẵn",
                "operationId": "TestResultsController_validateResultData",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestResultDataDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Validate test result data against template",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/recommendations": {
            "post": {
                "description": "Sinh khuyến nghị tự động dựa trên kết quả xét nghiệm",
                "operationId": "TestResultsController_generateRecommendations",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestResultDataDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Generate recommendations based on test results",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results": {
            "post": {
                "description": "Support both online booking (with appointmentId) and walk-in (with patientId + serviceId)",
                "operationId": "TestResultsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTestResultWithFileDto"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Forbidden: Admin or Staff role required."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new test result with file upload",
                "tags": [
                    "Test Results"
                ]
            },
            "get": {
                "operationId": "TestResultsController_findAll",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all test results",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/appointment/{appointmentId}": {
            "get": {
                "operationId": "TestResultsController_findByAppointmentId",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get test result by appointment ID",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/{id}": {
            "get": {
                "operationId": "TestResultsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a test result by ID",
                "tags": [
                    "Test Results"
                ]
            },
            "patch": {
                "operationId": "TestResultsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTestResultDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a test result by ID",
                "tags": [
                    "Test Results"
                ]
            },
            "delete": {
                "operationId": "TestResultsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a test result by ID",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/{id}/send-notification": {
            "post": {
                "description": "Gửi thông báo kết quả xét nghiệm cho bệnh nhân qua email và in-app notification",
                "operationId": "TestResultsController_sendNotificationToPatient",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Test result ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Send test result notification to patient",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/appointment/{appointmentId}/send-notification": {
            "post": {
                "description": "Gửi thông báo kết quả xét nghiệm cho bệnh nhân theo appointment ID",
                "operationId": "TestResultsController_sendNotificationByAppointmentId",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "required": true,
                        "in": "path",
                        "description": "Appointment ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Send test result notification by appointment ID",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/patient/my-results": {
            "get": {
                "description": "Bệnh nhân xem kết quả xét nghiệm của chính mình",
                "operationId": "TestResultsController_getMyTestResults",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of patient test results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TestResultResponseDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get patient own test results",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/patient/result/{id}": {
            "get": {
                "operationId": "TestResultsController_getMyTestResultDetails",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Test result ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test result details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestResultResponseDto"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get patient test result details",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/{id}/export-pdf": {
            "get": {
                "description": "Xuất kết quả xét nghiệm ra file PDF để download",
                "operationId": "TestResultsController_exportTestResultToPdf",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Test result ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Export test result as PDF",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/consultation/{appointmentId}/export-pdf": {
            "get": {
                "description": "Xuất báo cáo tư vấn trực tuyến ra file PDF",
                "operationId": "TestResultsController_exportConsultationToPdf",
                "parameters": [
                    {
                        "name": "appointmentId",
                        "required": true,
                        "in": "path",
                        "description": "Consultation appointment ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Export consultation report as PDF",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/test-results/sti/{stiProcessId}/export-pdf": {
            "get": {
                "description": "Xuất kết quả xét nghiệm STI ra file PDF với format chuyên biệt",
                "operationId": "TestResultsController_exportStiTestResultToPdf",
                "parameters": [
                    {
                        "name": "stiProcessId",
                        "required": true,
                        "in": "path",
                        "description": "STI test process ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Export STI test result as PDF",
                "tags": [
                    "Test Results"
                ]
            }
        },
        "/symptoms": {
            "post": {
                "operationId": "SymptomsController_create",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSymptomDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Symptom created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Create a new symptom",
                "tags": [
                    "Symptoms"
                ]
            },
            "get": {
                "operationId": "SymptomsController_findAll",
                "parameters": [
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "createdAt",
                            "type": "string",
                            "enum": [
                                "name",
                                "createdAt",
                                "updatedAt"
                            ]
                        }
                    },
                    {
                        "name": "sortOrder",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "default": "DESC",
                            "type": "string",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Số trang",
                        "schema": {
                            "default": 1,
                            "type": "number"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "schema": {
                            "default": 10,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get all symptoms with pagination and filters",
                "tags": [
                    "Symptoms"
                ]
            }
        },
        "/symptoms/{id}": {
            "get": {
                "operationId": "SymptomsController_findOne",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get a symptom by ID",
                "tags": [
                    "Symptoms"
                ]
            },
            "patch": {
                "operationId": "SymptomsController_update",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSymptomDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Symptom updated successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Update a symptom by ID",
                "tags": [
                    "Symptoms"
                ]
            },
            "delete": {
                "operationId": "SymptomsController_remove",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Delete a symptom by ID",
                "tags": [
                    "Symptoms"
                ]
            }
        },
        "/revenue-stats/monthly": {
            "get": {
                "operationId": "RevenueStatsController_getMonthlyRevenueStats",
                "parameters": [
                    {
                        "name": "year",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "month",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Monthly revenue retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid year or month parameter"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get monthly revenue statistics",
                "tags": [
                    "Revenue Stats"
                ]
            }
        },
        "/revenue-stats/yearly": {
            "get": {
                "operationId": "RevenueStatsController_getYearlyRevenueStats",
                "parameters": [
                    {
                        "name": "year",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Yearly revenue with monthly breakdown retrieved successfully"
                    },
                    "400": {
                        "description": "Invalid year parameter"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get yearly revenue statistics with monthly breakdown",
                "tags": [
                    "Revenue Stats"
                ]
            }
        },
        "/revenue-stats/report": {
            "get": {
                "operationId": "RevenueStatsController_generateExcelReport",
                "parameters": [
                    {
                        "name": "year",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel report generated successfully"
                    },
                    "400": {
                        "description": "Invalid year parameter"
                    },
                    "403": {
                        "description": "Forbidden: Only Admin or Manager can access"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Generate an Excel report for revenue statistics",
                "tags": [
                    "Revenue Stats"
                ]
            }
        },
        "/service-package-stats/most-subscribed": {
            "get": {
                "operationId": "ServicePackagesStatsController_getMostSubscribedPackage",
                "parameters": [
                    {
                        "name": "month",
                        "required": false,
                        "in": "query",
                        "description": "Tháng cần thống kê (1-12)",
                        "schema": {
                            "example": 6,
                            "type": "number"
                        }
                    },
                    {
                        "name": "year",
                        "required": false,
                        "in": "query",
                        "description": "Năm cần thống kê",
                        "schema": {
                            "example": 2025,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the most subscribed service package"
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get the most subscribed service package for a specific month",
                "tags": [
                    "Service Packages Stats"
                ]
            }
        },
        "/service-package-stats/all-stats": {
            "get": {
                "operationId": "ServicePackagesStatsController_getAllPackageStats",
                "parameters": [
                    {
                        "name": "month",
                        "required": false,
                        "in": "query",
                        "description": "Tháng cần thống kê (1-12)",
                        "schema": {
                            "example": 6,
                            "type": "number"
                        }
                    },
                    {
                        "name": "year",
                        "required": false,
                        "in": "query",
                        "description": "Năm cần thống kê",
                        "schema": {
                            "example": 2025,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved statistics for all service packages"
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Get statistics for all service packages in a specific month",
                "tags": [
                    "Service Packages Stats"
                ]
            }
        },
        "/service-package-stats/report": {
            "get": {
                "operationId": "ServicePackagesStatsController_generateExcelReport",
                "parameters": [
                    {
                        "name": "month",
                        "required": false,
                        "in": "query",
                        "description": "Tháng cần thống kê (1-12)",
                        "schema": {
                            "example": 6,
                            "type": "number"
                        }
                    },
                    {
                        "name": "year",
                        "required": false,
                        "in": "query",
                        "description": "Năm cần thống kê",
                        "schema": {
                            "example": 2025,
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excel report generated successfully"
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "summary": "Generate an Excel report for all subscribed service package",
                "tags": [
                    "Service Packages Stats"
                ]
            }
        },
        "/health": {
            "get": {
                "operationId": "HealthController_check",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The Health Check is successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "info": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {},
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "details": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The Health Check is not successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "info": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            },
                                            "nullable": true
                                        },
                                        "details": {
                                            "type": "object",
                                            "example": {
                                                "database": {
                                                    "status": "up"
                                                },
                                                "redis": {
                                                    "status": "down",
                                                    "message": "Could not connect"
                                                }
                                            },
                                            "additionalProperties": {
                                                "type": "object",
                                                "required": [
                                                    "status"
                                                ],
                                                "properties": {
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Health"
                ]
            }
        }
    },
    "info": {
        "title": "API Documentation Gender Health Care Service",
        "description": "API documentation for the project",
        "version": "1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            },
            "oauth2": {
                "type": "oauth2",
                "flows": {}
            }
        },
        "schemas": {
            "CreateAppointmentDto": {
                "type": "object",
                "properties": {
                    "serviceIds": {
                        "description": "Mảng các ID của dịch vụ mà người dùng muốn đặt. Để trống cho tư vấn tổng quát.",
                        "example": [
                            "service-uuid-1",
                            "service-uuid-2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "consultantId": {
                        "type": "string",
                        "description": "ID của tư vấn viên. Bắt buộc cho dịch vụ tư vấn, không cần thiết cho dịch vụ khác.",
                        "example": "consultant-uuid-123"
                    },
                    "appointmentDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày và giờ bắt đầu cuộc hẹn (ISO 8601).",
                        "example": "2025-12-10T09:00:00.000Z"
                    },
                    "appointmentLocation": {
                        "type": "string",
                        "description": "Địa điểm thực hiện cuộc hẹn (Online hoặc tại văn phòng).",
                        "enum": [
                            "online",
                            "office"
                        ]
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú thêm từ người dùng."
                    },
                    "meetingLink": {
                        "type": "string",
                        "description": "Link meeting"
                    }
                },
                "required": [
                    "appointmentDate",
                    "appointmentLocation"
                ]
            },
            "FindAvailableSlotsDto": {
                "type": "object",
                "properties": {
                    "serviceIds": {
                        "description": "Danh sách ID của các dịch vụ yêu cầu. Để trống cho tư vấn tổng quát.",
                        "example": [
                            "service-uuid-1",
                            "service-uuid-2"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày bắt đầu tìm kiếm (YYYY-MM-DD)",
                        "example": "2025-06-25"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày kết thúc tìm kiếm (YYYY-MM-DD). Mặc định là 7 ngày từ startDate",
                        "example": "2025-07-01"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Giờ bắt đầu trong ngày (HH:MM). Mặc định 08:00",
                        "example": "08:00"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Giờ kết thúc trong ngày (HH:MM). Mặc định 18:00",
                        "example": "18:00"
                    },
                    "consultantId": {
                        "type": "string",
                        "description": "ID tư vấn viên cụ thể (nếu muốn tìm slot cho tư vấn viên này)"
                    }
                },
                "required": [
                    "startDate"
                ]
            },
            "AvailableSlotDto": {
                "type": "object",
                "properties": {
                    "dateTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày và giờ của slot"
                    },
                    "consultant": {
                        "type": "object",
                        "description": "Thông tin tư vấn viên"
                    },
                    "availabilityId": {
                        "type": "string",
                        "description": "ID của availability slot"
                    },
                    "remainingSlots": {
                        "type": "number",
                        "description": "Số slot còn trống"
                    }
                },
                "required": [
                    "dateTime",
                    "consultant",
                    "availabilityId",
                    "remainingSlots"
                ]
            },
            "FindAvailableSlotsResponseDto": {
                "type": "object",
                "properties": {
                    "availableSlots": {
                        "description": "Danh sách các slot khả dụng",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvailableSlotDto"
                        }
                    },
                    "totalSlots": {
                        "type": "number",
                        "description": "Tổng số slot tìm thấy"
                    },
                    "totalConsultants": {
                        "type": "number",
                        "description": "Tổng số tư vấn viên có slot khả dụng"
                    },
                    "message": {
                        "type": "string",
                        "description": "Thông báo bổ sung (nếu có)"
                    }
                },
                "required": [
                    "availableSlots",
                    "totalSlots",
                    "totalConsultants"
                ]
            },
            "UpdateAppointmentDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Cập nhật trạng thái của cuộc hẹn (chỉ dành cho Tư vấn viên/Admin).",
                        "enum": [
                            "confirmed",
                            "checked_in",
                            "in_progress",
                            "completed",
                            "no_show"
                        ]
                    },
                    "meetingLink": {
                        "type": "string",
                        "description": "Link phòng họp cho tư vấn online."
                    }
                },
                "required": [
                    "status"
                ]
            },
            "CancelAppointmentDto": {
                "type": "object",
                "properties": {
                    "cancellationReason": {
                        "type": "string",
                        "description": "Lý do hủy lịch hẹn."
                    }
                }
            },
            "CheckInAppointmentDto": {
                "type": "object",
                "properties": {
                    "checkInTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian check-in, mặc định là thời gian hiện tại"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú từ lễ tân"
                    },
                    "actualServices": {
                        "description": "Danh sách services thực tế (có thể khác đặt ban đầu)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "CheckInResponseDto": {
                "type": "object",
                "properties": {}
            },
            "MarkNoShowDto": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Lý do đánh dấu no-show",
                        "example": "Khách hàng không đến theo lịch hẹn và không thể liên lạc được"
                    },
                    "contactAttempts": {
                        "type": "number",
                        "description": "Số lần đã cố gắng liên hệ",
                        "example": 3,
                        "minimum": 0
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú thêm",
                        "example": "Đã gọi điện 3 lần nhưng không nghe máy"
                    }
                },
                "required": [
                    "reason"
                ]
            },
            "NoShowProcessResult": {
                "type": "object",
                "properties": {}
            },
            "LateCheckInDto": {
                "type": "object",
                "properties": {
                    "actualArrivalTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian đến thực tế"
                    },
                    "adjustedServices": {
                        "description": "Dịch vụ điều chỉnh do thiếu thời gian",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú về việc đến trễ",
                        "example": "Khách hàng đến trễ 20 phút do kẹt xe"
                    }
                },
                "required": [
                    "actualArrivalTime"
                ]
            },
            "LateCheckInResponseDto": {
                "type": "object",
                "properties": {}
            },
            "UpdateMeetingLinkDto": {
                "type": "object",
                "properties": {
                    "meetingLink": {
                        "type": "string",
                        "description": "Meeting link (Google Meet, Zoom, etc.)"
                    }
                }
            },
            "CreateStiAppointmentDto": {
                "type": "object",
                "properties": {
                    "stiServiceId": {
                        "type": "string",
                        "description": "ID của dịch vụ xét nghiệm STI",
                        "example": "service-uuid-123"
                    },
                    "consultantId": {
                        "type": "string",
                        "description": "ID của tư vấn viên (nếu cần tư vấn)",
                        "example": "consultant-uuid-123"
                    },
                    "sampleCollectionDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày và giờ lấy mẫu xét nghiệm (ISO 8601)",
                        "example": "2025-12-10T09:00:00.000Z"
                    },
                    "sampleCollectionLocation": {
                        "type": "string",
                        "description": "Địa điểm lấy mẫu xét nghiệm (chỉ tại văn phòng/phòng khám)",
                        "enum": [
                            "online",
                            "office"
                        ],
                        "example": "office"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú thêm từ khách hàng",
                        "example": "Khách hàng muốn lấy mẫu vào buổi sáng"
                    }
                },
                "required": [
                    "stiServiceId",
                    "sampleCollectionDate",
                    "sampleCollectionLocation"
                ]
            },
            "Appointment": {
                "type": "object",
                "properties": {}
            },
            "CancelStiAppointmentDto": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Lý do hủy lịch hẹn",
                        "example": "Thay đổi kế hoạch cá nhân"
                    }
                }
            },
            "CreateQuestionDto": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    }
                },
                "required": [
                    "title",
                    "content"
                ]
            },
            "CreateChatDto": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Message content"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "text",
                            "image",
                            "file",
                            "public_pdf"
                        ],
                        "description": "Type of message",
                        "default": "text"
                    },
                    "questionId": {
                        "type": "string",
                        "description": "Question ID this message belongs to"
                    }
                },
                "required": [
                    "content",
                    "questionId"
                ]
            },
            "SendFileMessageBodyDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "File to upload (image or document)"
                    },
                    "content": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "file",
                            "image"
                        ],
                        "description": "Type of the message",
                        "default": "file"
                    }
                },
                "required": [
                    "file",
                    "type"
                ]
            },
            "SendPublicPdfMessageBodyDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "File to upload (PDF file)"
                    },
                    "content": {
                        "type": "string",
                        "description": "Optional message content/description",
                        "example": "Here is the healthcare guideline document"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the PDF document",
                        "example": "Healthcare guidelines for women"
                    }
                },
                "required": [
                    "file"
                ]
            },
            "UploadImageDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Image file to upload"
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Type of entity (e.g., \"user\", \"blog\", \"service\")",
                        "example": "user"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "ID of the entity this image belongs to",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "altText": {
                        "type": "string",
                        "description": "Alternative text for accessibility",
                        "example": "User profile picture"
                    },
                    "generateThumbnails": {
                        "type": "boolean",
                        "description": "Generate thumbnails for this image",
                        "default": true
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Make image publicly accessible",
                        "default": true
                    }
                },
                "required": [
                    "file",
                    "entityType",
                    "entityId"
                ]
            },
            "UploadDocumentDto": {
                "type": "object",
                "properties": {
                    "entityType": {
                        "type": "string",
                        "description": "Type of entity (e.g., \"contract\", \"user\", \"service\")",
                        "example": "contract"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "ID of the entity this document belongs to",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for the document"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the document"
                    },
                    "documentType": {
                        "type": "string",
                        "description": "Type of document (e.g., \"contract\", \"invoice\", \"report\")"
                    },
                    "isSensitive": {
                        "type": "boolean",
                        "description": "Mark document as containing sensitive information",
                        "default": false
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Document file to upload"
                    }
                },
                "required": [
                    "entityType",
                    "entityId",
                    "isSensitive",
                    "file"
                ]
            },
            "UploadPublicPdfDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "PDF file to upload"
                    },
                    "entityType": {
                        "type": "string",
                        "description": "Type of entity (e.g., \"blog\", \"service\", \"news\")",
                        "example": "blog"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "ID of the entity this PDF belongs to",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the PDF document",
                        "example": "Important healthcare guidelines"
                    }
                },
                "required": [
                    "file",
                    "entityType",
                    "entityId"
                ]
            },
            "TestUploadDto": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "description": {
                        "type": "string",
                        "description": "Test description",
                        "example": "Test upload to AWS S3",
                        "default": "Test upload to AWS S3"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Make file publicly accessible",
                        "default": true
                    }
                },
                "required": [
                    "file"
                ]
            },
            "RegisterDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "phone",
                    "address",
                    "gender"
                ]
            },
            "LoginDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email address",
                        "example": "example@example.com"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "ResendVerificationDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "ResetPasswordDto": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "RefreshTokenDto": {
                "type": "object",
                "properties": {
                    "refreshToken": {
                        "type": "string"
                    }
                },
                "required": [
                    "refreshToken"
                ]
            },
            "GoogleTokenDto": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "Google ID Token received from Google authentication"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "CreateUserDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "roleId": {
                        "type": "string"
                    },
                    "profilePicture": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "healthDataConsent": {
                        "type": "boolean",
                        "description": "Đồng ý cho phép thu thập dữ liệu sức khỏe",
                        "default": false
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "roleId"
                ]
            },
            "CreateManyUsersDto": {
                "type": "object",
                "properties": {
                    "users": {
                        "description": "Array of user objects to be created",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateUserDto"
                        }
                    }
                },
                "required": [
                    "users"
                ]
            },
            "UpdateProfileDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F"
                        ],
                        "description": "Gender must be M, F"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "profilePicture": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "notificationPreferences": {
                        "type": "object",
                        "description": "Notification preferences for the user",
                        "additionalProperties": true,
                        "example": {
                            "push": true,
                            "email": true
                        }
                    },
                    "healthDataConsent": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "dateOfBirth"
                ]
            },
            "ChangePasswordDto": {
                "type": "object",
                "properties": {
                    "currentPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    }
                },
                "required": [
                    "currentPassword",
                    "newPassword"
                ]
            },
            "UpdateHealthDataConsentDto": {
                "type": "object",
                "properties": {
                    "healthDataConsent": {
                        "type": "boolean",
                        "description": "Đồng ý cho phép thu thập và xử lý dữ liệu sức khỏe",
                        "example": true
                    }
                },
                "required": [
                    "healthDataConsent"
                ]
            },
            "UpdateUserDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "roleId": {
                        "type": "string"
                    },
                    "profilePicture": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "healthDataConsent": {
                        "type": "boolean",
                        "description": "Đồng ý cho phép thu thập dữ liệu sức khỏe",
                        "default": false
                    }
                }
            },
            "UpdateAuditLogDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "The user who performed the action."
                    },
                    "action": {
                        "type": "string",
                        "description": "The action performed (e.g., CREATE, UPDATE, DELETE).",
                        "example": "UPDATE"
                    },
                    "entityType": {
                        "type": "string",
                        "description": "The type of entity that was affected.",
                        "example": "User"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "The ID of the affected entity."
                    },
                    "oldValues": {
                        "type": "object",
                        "description": "The state of the entity before the change (JSON format)."
                    },
                    "newValues": {
                        "type": "object",
                        "description": "The state of the entity after the change (JSON format)."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional details about the action."
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the action (success/failure).",
                        "default": "success"
                    }
                }
            },
            "WebhookTypeDTO": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "desc": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "data": {
                        "type": "object",
                        "description": "Kiểu dữ liệu WebhookDataType của PayOS"
                    },
                    "signature": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "desc",
                    "success",
                    "data",
                    "signature"
                ]
            },
            "GetPayablePackagesDto": {
                "type": "object",
                "properties": {
                    "search": {
                        "type": "string",
                        "description": "Tìm kiếm theo tên gói",
                        "example": "Basic Health"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Chỉ lấy các gói đang hoạt động"
                    }
                }
            },
            "CreatePackagePaymentDto": {
                "type": "object",
                "properties": {
                    "packageId": {
                        "type": "string",
                        "description": "ID của gói dịch vụ cần thanh toán",
                        "example": "550e8400-e29b-41d4-a716-446655440005"
                    },
                    "description": {
                        "type": "string",
                        "description": "Mô tả thanh toán (tùy chọn)",
                        "example": "Thanh toán gói dịch vụ Premium"
                    },
                    "frontendReturnUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng sau khi thanh toán thành công",
                        "example": "https://yourdomain.com/payment/success"
                    },
                    "frontendCancelUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng khi hủy thanh toán",
                        "example": "https://yourdomain.com/payment/cancel"
                    }
                },
                "required": [
                    "packageId"
                ]
            },
            "CreateAppointmentPaymentDto": {
                "type": "object",
                "properties": {
                    "appointmentId": {
                        "type": "string",
                        "description": "ID của cuộc hẹn cần thanh toán",
                        "example": "550e8400-e29b-41d4-a716-446655440004"
                    },
                    "description": {
                        "type": "string",
                        "description": "Mô tả thanh toán (tùy chọn)",
                        "example": "Thanh toán cuộc hẹn tư vấn"
                    },
                    "frontendReturnUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng sau khi thanh toán thành công",
                        "example": "https://yourdomain.com/appointments/payment/success"
                    },
                    "frontendCancelUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng khi hủy thanh toán",
                        "example": "https://yourdomain.com/appointments/payment/cancel"
                    }
                },
                "required": [
                    "appointmentId"
                ]
            },
            "CreateServicePaymentDto": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "string",
                        "description": "ID của dịch vụ cần thanh toán",
                        "example": "550e8400-e29b-41d4-a716-446655440003"
                    },
                    "description": {
                        "type": "string",
                        "description": "Mô tả thanh toán (tùy chọn)",
                        "example": "Thanh toán dịch vụ tư vấn"
                    },
                    "frontendReturnUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng sau khi thanh toán thành công",
                        "example": "https://yourdomain.com/services/payment/success"
                    },
                    "frontendCancelUrl": {
                        "type": "string",
                        "description": "URL frontend để chuyển hướng khi hủy thanh toán",
                        "example": "https://yourdomain.com/services/payment/cancel"
                    }
                },
                "required": [
                    "serviceId"
                ]
            },
            "CancelPaymentDto": {
                "type": "object",
                "properties": {
                    "cancellationReason": {
                        "type": "string",
                        "description": "Lý do hủy thanh toán",
                        "example": "Người dùng không muốn thanh toán nữa"
                    }
                }
            },
            "CreateServicePackageDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the service package",
                        "example": "Basic Health Package"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the package (VND)",
                        "example": 500000
                    },
                    "durationMonths": {
                        "type": "number",
                        "description": "Duration in months",
                        "example": 1
                    },
                    "maxServicesPerMonth": {
                        "type": "number",
                        "description": "Maximum services per month",
                        "example": 10
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status",
                        "example": true
                    }
                },
                "required": [
                    "name",
                    "price",
                    "durationMonths"
                ]
            },
            "UpdateServicePackageDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the service package",
                        "example": "Basic Health Package"
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the package (VND)",
                        "example": 500000
                    },
                    "durationMonths": {
                        "type": "number",
                        "description": "Duration in months",
                        "example": 1
                    },
                    "maxServicesPerMonth": {
                        "type": "number",
                        "description": "Maximum services per month",
                        "example": 10
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status",
                        "example": true
                    }
                }
            },
            "CreateUserPackageSubscriptionDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "ID of the service package",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "paymentId": {
                        "type": "string",
                        "description": "ID of the payment",
                        "example": "550e8400-e29b-41d4-a716-446655440002"
                    }
                },
                "required": [
                    "userId",
                    "packageId",
                    "paymentId"
                ]
            },
            "UpdateUserPackageSubscriptionDto": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "Optional start date for the subscription",
                        "example": "2023-10-01T00:00:00Z"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "Optional end date for the subscription",
                        "example": "2024-10-01T00:00:00Z"
                    },
                    "status": {
                        "type": "string",
                        "description": "Optional status of the subscription",
                        "enum": [
                            "active",
                            "expired",
                            "cancelled",
                            "suspended"
                        ]
                    }
                }
            },
            "CreateBlogDto": {
                "type": "object",
                "properties": {
                    "authorId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "pending_review",
                            "needs_revision",
                            "rejected",
                            "approved",
                            "published",
                            "archived"
                        ],
                        "default": "draft"
                    },
                    "featuredImage": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "views": {
                        "type": "number"
                    },
                    "seoTitle": {
                        "type": "string"
                    },
                    "seoDescription": {
                        "type": "string"
                    },
                    "relatedServicesIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excerpt": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "autoPublish": {
                        "type": "boolean",
                        "description": "Auto publish for Admin/Manager (bypasses review workflow)",
                        "default": false
                    }
                },
                "required": [
                    "authorId",
                    "title",
                    "content",
                    "status",
                    "tags",
                    "categoryId"
                ]
            },
            "CreateBlogImageDTO": {
                "type": "object",
                "properties": {
                    "blogId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    }
                },
                "required": [
                    "blogId",
                    "imageId"
                ]
            },
            "UpdateBlogDto": {
                "type": "object",
                "properties": {
                    "authorId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "pending_review",
                            "needs_revision",
                            "rejected",
                            "approved",
                            "published",
                            "archived"
                        ],
                        "default": "draft"
                    },
                    "featuredImage": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "views": {
                        "type": "number"
                    },
                    "seoTitle": {
                        "type": "string"
                    },
                    "seoDescription": {
                        "type": "string"
                    },
                    "relatedServicesIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "excerpt": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    },
                    "autoPublish": {
                        "type": "boolean",
                        "description": "Auto publish for Admin/Manager (bypasses review workflow)",
                        "default": false
                    }
                }
            },
            "ReviewBlogDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Review action for the blog",
                        "enum": [
                            "approved",
                            "rejected",
                            "needs_revision"
                        ]
                    },
                    "rejectionReason": {
                        "type": "string",
                        "description": "Rejection reason (required when rejecting)"
                    },
                    "revisionNotes": {
                        "type": "string",
                        "description": "Revision notes (for needs revision status)"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "PublishBlogDto": {
                "type": "object",
                "properties": {
                    "publishNotes": {
                        "type": "string",
                        "description": "Notes for publishing the blog"
                    }
                }
            },
            "UpdateImageDto": {
                "type": "object",
                "properties": {
                    "altText": {
                        "type": "string",
                        "description": "Alternative text for the image, used for accessibility (SEO)",
                        "example": "A beautiful landscape"
                    }
                }
            },
            "CreateTagDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the tag",
                        "example": "tech"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UpdateTagDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the tag",
                        "example": "tech"
                    }
                }
            },
            "CreateCategoryDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Category name",
                        "example": "Health"
                    },
                    "description": {
                        "type": "string",
                        "description": "Category description",
                        "example": "Health related services"
                    },
                    "type": {
                        "type": "string",
                        "description": "Category type",
                        "example": "service"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status",
                        "example": true
                    },
                    "parentId": {
                        "type": "string",
                        "description": "Parent category ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "UpdateCategoryDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Category name",
                        "example": "Health"
                    },
                    "description": {
                        "type": "string",
                        "description": "Category description",
                        "example": "Health related services"
                    },
                    "type": {
                        "type": "string",
                        "description": "Category type",
                        "example": "service"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status",
                        "example": true
                    },
                    "parentId": {
                        "type": "string",
                        "description": "Parent category ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                }
            },
            "CreateConsultantAvailabilityDto": {
                "type": "object",
                "properties": {
                    "dayOfWeek": {
                        "type": "number",
                        "description": "Ngày trong tuần (0=Chủ Nhật, 1=Thứ Hai, ..., 6=Thứ Bảy)"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Thời gian bắt đầu (HH:mm)"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Thời gian kết thúc (HH:mm)"
                    },
                    "location": {
                        "type": "string",
                        "description": "Địa điểm làm việc",
                        "enum": [
                            "online",
                            "office"
                        ]
                    },
                    "recurring": {
                        "type": "boolean",
                        "description": "Lịch có lặp lại hàng tuần không?",
                        "default": true
                    },
                    "specificDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày cụ thể cho lịch làm việc không lặp lại (YYYY-MM-DD)"
                    },
                    "maxAppointments": {
                        "type": "number",
                        "description": "Số lượng cuộc hẹn tối đa trong khung giờ này",
                        "default": 1
                    }
                },
                "required": [
                    "dayOfWeek",
                    "startTime",
                    "endTime"
                ]
            },
            "UpdateConsultantAvailabilityDto": {
                "type": "object",
                "properties": {
                    "dayOfWeek": {
                        "type": "number",
                        "description": "Ngày trong tuần (0=Chủ Nhật, 1=Thứ Hai, ..., 6=Thứ Bảy)"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Thời gian bắt đầu (HH:mm)"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Thời gian kết thúc (HH:mm)"
                    },
                    "location": {
                        "type": "string",
                        "description": "Địa điểm làm việc",
                        "enum": [
                            "online",
                            "office"
                        ]
                    },
                    "recurring": {
                        "type": "boolean",
                        "description": "Lịch có lặp lại hàng tuần không?",
                        "default": true
                    },
                    "specificDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày cụ thể cho lịch làm việc không lặp lại (YYYY-MM-DD)"
                    },
                    "maxAppointments": {
                        "type": "number",
                        "description": "Số lượng cuộc hẹn tối đa trong khung giờ này",
                        "default": 1
                    }
                }
            },
            "RegisterConsultantDto": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "specialties": {
                        "description": "Danh sách các chuyên môn của tư vấn viên",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualification": {
                        "type": "string"
                    },
                    "experience": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "cv": {
                        "type": "string",
                        "format": "binary",
                        "description": "CV file (PDF, DOCX)."
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "description": "Các file chứng chỉ, bằng cấp (tối đa 5 file)."
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password",
                    "specialties",
                    "qualification",
                    "experience",
                    "cv",
                    "certificates"
                ]
            },
            "CreateConsultantProfileDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user this profile belongs to."
                    },
                    "specialties": {
                        "description": "Chuyên môn của tư vấn viên, ví dụ: \"Cardiology\", \"Psychology\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualification": {
                        "type": "string",
                        "description": "Qualification of the consultant."
                    },
                    "experience": {
                        "type": "string",
                        "description": "Experience of the consultant."
                    },
                    "bio": {
                        "type": "string"
                    },
                    "consultationFee": {
                        "type": "number",
                        "description": "Consultation fee per session."
                    },
                    "consultationFeeType": {
                        "type": "string",
                        "enum": [
                            "hourly",
                            "per_session",
                            "per_service"
                        ],
                        "description": "Type of consultation fee."
                    },
                    "sessionDurationMinutes": {
                        "type": "number",
                        "default": 60
                    },
                    "isAvailable": {
                        "type": "boolean",
                        "default": true
                    },
                    "profileStatus": {
                        "type": "string",
                        "enum": [
                            "active",
                            "on_leave",
                            "training",
                            "inactive",
                            "pending_approval",
                            "rejected"
                        ],
                        "default": "active"
                    },
                    "languages": {
                        "default": [
                            "tiếng Việt"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "consultationTypes": {
                        "type": "array",
                        "default": [
                            "online",
                            "office"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    }
                },
                "required": [
                    "userId",
                    "specialties",
                    "qualification",
                    "experience",
                    "consultationFee",
                    "consultationFeeType"
                ]
            },
            "UpdateConsultantProfileDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user this profile belongs to."
                    },
                    "specialties": {
                        "description": "Chuyên môn của tư vấn viên, ví dụ: \"Cardiology\", \"Psychology\".",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "qualification": {
                        "type": "string",
                        "description": "Qualification of the consultant."
                    },
                    "experience": {
                        "type": "string",
                        "description": "Experience of the consultant."
                    },
                    "bio": {
                        "type": "string"
                    },
                    "consultationFee": {
                        "type": "number",
                        "description": "Consultation fee per session."
                    },
                    "consultationFeeType": {
                        "type": "string",
                        "enum": [
                            "hourly",
                            "per_session",
                            "per_service"
                        ],
                        "description": "Type of consultation fee."
                    },
                    "sessionDurationMinutes": {
                        "type": "number",
                        "default": 60
                    },
                    "isAvailable": {
                        "type": "boolean",
                        "default": true
                    },
                    "profileStatus": {
                        "type": "string",
                        "enum": [
                            "active",
                            "on_leave",
                            "training",
                            "inactive",
                            "pending_approval",
                            "rejected"
                        ],
                        "default": "active"
                    },
                    "languages": {
                        "default": [
                            "tiếng Việt"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "consultationTypes": {
                        "type": "array",
                        "default": [
                            "online",
                            "office"
                        ],
                        "items": {
                            "type": "string",
                            "enum": [
                                "online",
                                "office"
                            ]
                        }
                    }
                }
            },
            "RejectProfileDto": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Reason for rejection"
                    }
                },
                "required": [
                    "reason"
                ]
            },
            "DayWorkingHoursDto": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "type": "string",
                        "description": "Thời gian bắt đầu làm việc trong ngày"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "Thời gian kết thúc làm việc trong ngày"
                    },
                    "isAvailable": {
                        "type": "boolean",
                        "description": "Trạng thái khả dụng của consultant trong ngày"
                    },
                    "maxAppointments": {
                        "type": "number",
                        "description": "Số lượng cuộc hẹn tối đa trong ngày",
                        "default": 1,
                        "minimum": 1,
                        "maximum": 20
                    }
                },
                "required": [
                    "startTime",
                    "endTime",
                    "isAvailable"
                ]
            },
            "WorkingHoursDto": {
                "type": "object",
                "properties": {
                    "monday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "tuesday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "wednesday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "thursday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "friday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "saturday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "sunday": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayWorkingHoursDto"
                        }
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    }
                }
            },
            "UpdateWorkingHoursDto": {
                "type": "object",
                "properties": {
                    "workingHours": {
                        "description": "Thông tin giờ làm việc của consultant",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkingHoursDto"
                            }
                        ]
                    },
                    "weeksToGenerate": {
                        "type": "number",
                        "description": "Số tuần để tự động tạo lịch khả dụng",
                        "default": 4,
                        "minimum": 1,
                        "maximum": 12
                    }
                },
                "required": [
                    "workingHours"
                ]
            },
            "GenerateScheduleDto": {
                "type": "object",
                "properties": {
                    "weeksToGenerate": {
                        "type": "number",
                        "description": "Number of weeks to generate schedule for",
                        "default": 4,
                        "minimum": 1,
                        "maximum": 12
                    }
                }
            },
            "UpdateContractFileDto": {
                "type": "object",
                "properties": {
                    "fileType": {
                        "type": "string",
                        "description": "The type of the linked file (e.g., \"Signed PDF\", \"Draft\")",
                        "example": "Signed PDF"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes about this specific file link"
                    }
                }
            },
            "CreateContraceptiveReminderDto": {
                "type": "object",
                "properties": {
                    "contraceptiveType": {
                        "type": "string",
                        "description": "Loại thuốc hoặc phương pháp tránh thai"
                    },
                    "reminderTime": {
                        "type": "string",
                        "description": "Thời gian nhắc nhở trong ngày (HH:mm)"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày bắt đầu nhắc nhở (YYYY-MM-DD)"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày kết thúc nhắc nhở (YYYY-MM-DD)"
                    },
                    "frequency": {
                        "type": "string",
                        "description": "Tần suất nhắc nhở",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                        ],
                        "default": "weekly"
                    },
                    "daysOfWeek": {
                        "description": "Các ngày trong tuần (0=Chủ Nhật, 1=Thứ Hai, ..., 6=Thứ Bảy). Bắt buộc nếu tần suất là WEEKLY.",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "reminderMessage": {
                        "type": "string",
                        "description": "Nội dung tin nhắn nhắc nhở tùy chỉnh"
                    }
                },
                "required": [
                    "contraceptiveType",
                    "reminderTime",
                    "startDate",
                    "frequency"
                ]
            },
            "UpdateContraceptiveReminderDto": {
                "type": "object",
                "properties": {
                    "contraceptiveType": {
                        "type": "string",
                        "description": "Loại thuốc hoặc phương pháp tránh thai"
                    },
                    "reminderTime": {
                        "type": "string",
                        "description": "Thời gian nhắc nhở trong ngày (HH:mm)"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày bắt đầu nhắc nhở (YYYY-MM-DD)"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày kết thúc nhắc nhở (YYYY-MM-DD)"
                    },
                    "frequency": {
                        "type": "string",
                        "description": "Tần suất nhắc nhở",
                        "enum": [
                            "daily",
                            "weekly",
                            "monthly"
                        ],
                        "default": "weekly"
                    },
                    "daysOfWeek": {
                        "description": "Các ngày trong tuần (0=Chủ Nhật, 1=Thứ Hai, ..., 6=Thứ Bảy). Bắt buộc nếu tần suất là WEEKLY.",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "reminderMessage": {
                        "type": "string",
                        "description": "Nội dung tin nhắn nhắc nhở tùy chỉnh"
                    }
                }
            },
            "CreateCycleSymptomDto": {
                "type": "object",
                "properties": {
                    "intensity": {
                        "type": "number",
                        "description": "Intensity level of the symptom",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes about the symptom"
                    },
                    "menstrualCycleId": {
                        "type": "string",
                        "description": "ID of the menstrual cycle"
                    },
                    "symptomId": {
                        "type": "string",
                        "description": "ID of the symptom"
                    }
                },
                "required": [
                    "menstrualCycleId",
                    "symptomId"
                ]
            },
            "UpdateCycleSymptomDto": {
                "type": "object",
                "properties": {
                    "intensity": {
                        "type": "number",
                        "description": "Intensity level of the symptom",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes about the symptom"
                    },
                    "menstrualCycleId": {
                        "type": "string",
                        "description": "ID of the menstrual cycle"
                    },
                    "symptomId": {
                        "type": "string",
                        "description": "ID of the symptom"
                    }
                }
            },
            "UpdateDocumentDto": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A new description for the document"
                    },
                    "isSensitive": {
                        "type": "boolean",
                        "description": "Update the sensitivity status of the document"
                    }
                }
            },
            "CreateEmploymentContractDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user (employee)"
                    },
                    "contractNumber": {
                        "type": "string",
                        "description": "Contract number"
                    },
                    "contractType": {
                        "type": "string",
                        "description": "Type of contract (e.g., \"Full-time\", \"Part-time\")"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Start date of the contract",
                        "example": "2025-01-01"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End date of the contract",
                        "example": "2026-01-01"
                    },
                    "status": {
                        "type": "string",
                        "description": "Contract status",
                        "enum": [
                            "pending",
                            "active",
                            "expired",
                            "terminated",
                            "renewed"
                        ],
                        "default": "pending"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional notes or description"
                    }
                },
                "required": [
                    "userId",
                    "contractNumber",
                    "contractType",
                    "startDate"
                ]
            },
            "UpdateEmploymentContractDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user (employee)"
                    },
                    "contractNumber": {
                        "type": "string",
                        "description": "Contract number"
                    },
                    "contractType": {
                        "type": "string",
                        "description": "Type of contract (e.g., \"Full-time\", \"Part-time\")"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Start date of the contract",
                        "example": "2025-01-01"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End date of the contract",
                        "example": "2026-01-01"
                    },
                    "status": {
                        "type": "string",
                        "description": "Contract status",
                        "enum": [
                            "pending",
                            "active",
                            "expired",
                            "terminated",
                            "renewed"
                        ],
                        "default": "pending"
                    },
                    "description": {
                        "type": "string",
                        "description": "Additional notes or description"
                    }
                }
            },
            "CreateFeedbackDto": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "ID of the user providing feedback"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID of the service being reviewed"
                    },
                    "appointmentId": {
                        "type": "string",
                        "description": "ID of the appointment related to the feedback"
                    },
                    "consultantId": {
                        "type": "string",
                        "description": "ID of the consultant providing the service"
                    },
                    "rating": {
                        "type": "number",
                        "description": "Rating given by the user",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments or feedback text"
                    },
                    "isAnonymous": {
                        "type": "boolean",
                        "description": "Feedback is anonymous or not",
                        "example": false
                    },
                    "staffResponse": {
                        "type": "string",
                        "description": "Staff response to the feedback"
                    }
                },
                "required": [
                    "userId",
                    "serviceId",
                    "appointmentId",
                    "consultantId",
                    "rating"
                ]
            },
            "UpdateFeedbackDto": {
                "type": "object",
                "properties": {
                    "rating": {
                        "type": "number",
                        "description": "IDs of the tags associated with the feedback"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Comments or feedback text"
                    },
                    "isAnonymous": {
                        "type": "boolean",
                        "description": "Indicates if the feedback is anonymous"
                    },
                    "staffResponse": {
                        "type": "string",
                        "description": "Response from the staff to the feedback"
                    }
                },
                "required": [
                    "rating"
                ]
            },
            "CreateFeedbackImageDTO": {
                "type": "object",
                "properties": {
                    "feedbackId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    }
                },
                "required": [
                    "feedbackId",
                    "imageId"
                ]
            },
            "CreateMenstrualCycleDto": {
                "type": "object",
                "properties": {
                    "cycleStartDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)"
                    },
                    "cycleEndDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)"
                    }
                },
                "required": [
                    "cycleStartDate",
                    "cycleEndDate"
                ]
            },
            "UpdateMenstrualCycleDto": {
                "type": "object",
                "properties": {
                    "cycleStartDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Start Date (YYYY-MM-DD)"
                    },
                    "cycleEndDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "End Date (YYYY-MM-DD)"
                    }
                }
            },
            "CreatePackageServiceUsageDto": {
                "type": "object",
                "properties": {
                    "subscriptionId": {
                        "type": "string",
                        "description": "ID of the user package subscription",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID of the service",
                        "example": "550e8400-e29b-41d4-a716-446655440002"
                    },
                    "usageDate": {
                        "type": "string",
                        "description": "Date of usage (ISO format)",
                        "example": "2025-06-19"
                    }
                },
                "required": [
                    "subscriptionId",
                    "serviceId"
                ]
            },
            "UpdatePackageServiceUsageDto": {
                "type": "object",
                "properties": {
                    "usageDate": {
                        "type": "string",
                        "description": "Date of usage (ISO format)",
                        "example": "2025-06-19"
                    }
                }
            },
            "CreateServiceDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Service name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the service"
                    },
                    "price": {
                        "type": "number",
                        "description": "Service price (VND)"
                    },
                    "duration": {
                        "type": "number",
                        "description": "Service duration (minutes)"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status"
                    },
                    "shortDescription": {
                        "type": "string",
                        "description": "Short description"
                    },
                    "prerequisites": {
                        "type": "string",
                        "description": "Prerequisites for using the service"
                    },
                    "postInstructions": {
                        "type": "string",
                        "description": "Post-service instructions"
                    },
                    "featured": {
                        "type": "boolean",
                        "description": "Featured service"
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "Category ID"
                    },
                    "requiresConsultant": {
                        "type": "boolean",
                        "description": "Required Consultant"
                    },
                    "location": {
                        "type": "string",
                        "description": "Service location",
                        "enum": [
                            "online",
                            "office"
                        ],
                        "default": "office"
                    }
                },
                "required": [
                    "name",
                    "description",
                    "price",
                    "duration",
                    "categoryId"
                ]
            },
            "Service": {
                "type": "object",
                "properties": {}
            },
            "UpdateServiceDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Service name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed description of the service"
                    },
                    "price": {
                        "type": "number",
                        "description": "Service price (VND)"
                    },
                    "duration": {
                        "type": "number",
                        "description": "Service duration (minutes)"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Active status"
                    },
                    "shortDescription": {
                        "type": "string",
                        "description": "Short description"
                    },
                    "prerequisites": {
                        "type": "string",
                        "description": "Prerequisites for using the service"
                    },
                    "postInstructions": {
                        "type": "string",
                        "description": "Post-service instructions"
                    },
                    "featured": {
                        "type": "boolean",
                        "description": "Featured service"
                    },
                    "categoryId": {
                        "type": "string",
                        "description": "Category ID"
                    },
                    "requiresConsultant": {
                        "type": "boolean",
                        "description": "Required Consultant"
                    },
                    "location": {
                        "type": "string",
                        "description": "Service location",
                        "enum": [
                            "online",
                            "office"
                        ],
                        "default": "office"
                    }
                }
            },
            "CreateServiceImageDto": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    }
                },
                "required": [
                    "serviceId",
                    "imageId"
                ]
            },
            "CreatePackageServiceDto": {
                "type": "object",
                "properties": {
                    "packageId": {
                        "type": "string",
                        "description": "ID of the service package",
                        "example": "550e8400-e29b-41d4-a716-446655440001"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID of the service",
                        "example": "550e8400-e29b-41d4-a716-446655440003"
                    },
                    "quantityLimit": {
                        "type": "number",
                        "description": "Quantity limit",
                        "example": 10
                    },
                    "discountPercentage": {
                        "type": "number",
                        "description": "Discount percentage",
                        "example": 0
                    }
                },
                "required": [
                    "packageId",
                    "serviceId"
                ]
            },
            "UpdatePackageServiceDto": {
                "type": "object",
                "properties": {
                    "quantityLimit": {
                        "type": "number",
                        "description": "Quantity limit",
                        "example": 10
                    },
                    "discountPercentage": {
                        "type": "number",
                        "description": "Discount percentage",
                        "example": 0
                    }
                }
            },
            "CreateRoleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "customer",
                            "consultant",
                            "staff",
                            "manager",
                            "admin"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UpdateRoleDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "customer",
                            "consultant",
                            "staff",
                            "manager",
                            "admin"
                        ]
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "CreateStiTestProcessDto": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "string",
                        "description": "ID của dịch vụ xét nghiệm STI"
                    },
                    "patientId": {
                        "type": "string",
                        "description": "ID của bệnh nhân"
                    },
                    "sampleType": {
                        "type": "string",
                        "description": "Loại mẫu xét nghiệm",
                        "enum": [
                            "blood",
                            "urine",
                            "swab",
                            "saliva",
                            "other"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "Độ ưu tiên xử lý",
                        "enum": [
                            "normal",
                            "high",
                            "urgent"
                        ]
                    },
                    "appointmentId": {
                        "type": "string",
                        "description": "ID cuộc hẹn lấy mẫu"
                    },
                    "estimatedResultDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian dự kiến có kết quả"
                    },
                    "sampleCollectionLocation": {
                        "type": "string",
                        "description": "Địa điểm lấy mẫu"
                    },
                    "processNotes": {
                        "type": "string",
                        "description": "Ghi chú về quá trình"
                    },
                    "consultantDoctorId": {
                        "type": "string",
                        "description": "ID bác sĩ tư vấn"
                    },
                    "requiresConsultation": {
                        "type": "boolean",
                        "description": "Có yêu cầu tư vấn hay không",
                        "example": false
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "description": "Có bảo mật hay không",
                        "example": true
                    }
                },
                "required": [
                    "serviceId",
                    "patientId",
                    "sampleType"
                ]
            },
            "StiTestProcessResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID của quá trình xét nghiệm"
                    },
                    "testCode": {
                        "type": "string",
                        "description": "Mã số xét nghiệm"
                    },
                    "status": {
                        "type": "string",
                        "description": "Trạng thái quá trình",
                        "enum": [
                            "ordered",
                            "sample_collection_scheduled",
                            "sample_collected",
                            "processing",
                            "result_ready",
                            "result_delivered",
                            "consultation_required",
                            "follow_up_scheduled",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "sampleType": {
                        "type": "string",
                        "description": "Loại mẫu",
                        "enum": [
                            "blood",
                            "urine",
                            "swab",
                            "saliva",
                            "other"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "Độ ưu tiên",
                        "enum": [
                            "normal",
                            "high",
                            "urgent"
                        ]
                    },
                    "estimatedResultDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian dự kiến có kết quả",
                        "nullable": true
                    },
                    "actualResultDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian thực tế có kết quả",
                        "nullable": true
                    },
                    "sampleCollectionDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian lấy mẫu",
                        "nullable": true
                    },
                    "sampleCollectionLocation": {
                        "type": "string",
                        "description": "Địa điểm lấy mẫu",
                        "nullable": true
                    },
                    "processNotes": {
                        "type": "string",
                        "description": "Ghi chú quá trình",
                        "nullable": true
                    },
                    "labNotes": {
                        "type": "string",
                        "description": "Ghi chú từ lab",
                        "nullable": true
                    },
                    "sampleCollectedBy": {
                        "type": "string",
                        "description": "Người lấy mẫu",
                        "nullable": true
                    },
                    "labProcessedBy": {
                        "type": "string",
                        "description": "Lab xử lý",
                        "nullable": true
                    },
                    "requiresConsultation": {
                        "type": "boolean",
                        "description": "Yêu cầu tư vấn"
                    },
                    "patientNotified": {
                        "type": "boolean",
                        "description": "Đã thông báo bệnh nhân"
                    },
                    "resultEmailSent": {
                        "type": "boolean",
                        "description": "Đã gửi email kết quả"
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "description": "Bảo mật"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày tạo"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày cập nhật"
                    },
                    "patient": {
                        "type": "object",
                        "description": "Thông tin bệnh nhân",
                        "nullable": true
                    },
                    "service": {
                        "type": "object",
                        "description": "Thông tin dịch vụ",
                        "nullable": true
                    },
                    "appointment": {
                        "type": "object",
                        "description": "Thông tin cuộc hẹn",
                        "nullable": true
                    },
                    "testResult": {
                        "type": "object",
                        "description": "Thông tin kết quả xét nghiệm",
                        "nullable": true
                    },
                    "consultantDoctor": {
                        "type": "object",
                        "description": "Thông tin bác sĩ tư vấn",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "testCode",
                    "status",
                    "sampleType",
                    "priority",
                    "estimatedResultDate",
                    "actualResultDate",
                    "sampleCollectionDate",
                    "sampleCollectionLocation",
                    "processNotes",
                    "labNotes",
                    "sampleCollectedBy",
                    "labProcessedBy",
                    "requiresConsultation",
                    "patientNotified",
                    "resultEmailSent",
                    "isConfidential",
                    "createdAt",
                    "updatedAt",
                    "patient",
                    "service",
                    "appointment",
                    "testResult",
                    "consultantDoctor"
                ]
            },
            "QueryStiTestProcessDto": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Trạng thái quá trình xét nghiệm",
                        "enum": [
                            "ordered",
                            "sample_collection_scheduled",
                            "sample_collected",
                            "processing",
                            "result_ready",
                            "result_delivered",
                            "consultation_required",
                            "follow_up_scheduled",
                            "completed",
                            "cancelled"
                        ]
                    },
                    "sampleType": {
                        "type": "string",
                        "description": "Loại mẫu xét nghiệm",
                        "enum": [
                            "blood",
                            "urine",
                            "swab",
                            "saliva",
                            "other"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "Độ ưu tiên",
                        "enum": [
                            "normal",
                            "high",
                            "urgent"
                        ]
                    },
                    "patientId": {
                        "type": "string",
                        "description": "ID bệnh nhân"
                    },
                    "consultantDoctorId": {
                        "type": "string",
                        "description": "ID bác sĩ tư vấn"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID dịch vụ"
                    },
                    "testCode": {
                        "type": "string",
                        "description": "Tìm kiếm theo mã xét nghiệm"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày bắt đầu (từ ngày)",
                        "example": "2024-01-01"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Ngày kết thúc (đến ngày)",
                        "example": "2024-12-31"
                    },
                    "requiresConsultation": {
                        "type": "boolean",
                        "description": "Yêu cầu tư vấn"
                    },
                    "patientNotified": {
                        "type": "boolean",
                        "description": "Đã thông báo bệnh nhân"
                    },
                    "hasResults": {
                        "type": "boolean",
                        "description": "Chỉ hiển thị các xét nghiệm có kết quả"
                    },
                    "sortBy": {
                        "type": "string",
                        "description": "Sắp xếp theo trường",
                        "enum": [
                            "createdAt",
                            "updatedAt",
                            "status",
                            "priority"
                        ],
                        "default": "createdAt"
                    },
                    "sortOrder": {
                        "type": "string",
                        "description": "Thứ tự sắp xếp",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "default": "DESC"
                    },
                    "page": {
                        "type": "number",
                        "description": "Số trang",
                        "default": 1
                    },
                    "limit": {
                        "type": "number",
                        "description": "Số lượng bản ghi trên mỗi trang",
                        "default": 10
                    }
                }
            },
            "UpdateStiTestProcessDto": {
                "type": "object",
                "properties": {
                    "serviceId": {
                        "type": "string",
                        "description": "ID của dịch vụ xét nghiệm STI"
                    },
                    "patientId": {
                        "type": "string",
                        "description": "ID của bệnh nhân"
                    },
                    "sampleType": {
                        "type": "string",
                        "description": "Loại mẫu xét nghiệm",
                        "enum": [
                            "blood",
                            "urine",
                            "swab",
                            "saliva",
                            "other"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "description": "Độ ưu tiên xử lý",
                        "enum": [
                            "normal",
                            "high",
                            "urgent"
                        ]
                    },
                    "appointmentId": {
                        "type": "string",
                        "description": "ID cuộc hẹn lấy mẫu"
                    },
                    "estimatedResultDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian dự kiến có kết quả"
                    },
                    "sampleCollectionLocation": {
                        "type": "string",
                        "description": "Địa điểm lấy mẫu"
                    },
                    "processNotes": {
                        "type": "string",
                        "description": "Ghi chú về quá trình"
                    },
                    "consultantDoctorId": {
                        "type": "string",
                        "description": "ID bác sĩ tư vấn"
                    },
                    "requiresConsultation": {
                        "type": "boolean",
                        "description": "Có yêu cầu tư vấn hay không",
                        "example": false
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "description": "Có bảo mật hay không",
                        "example": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Trạng thái quá trình xét nghiệm",
                        "enum": [
                            "ordered",
                            "sample_collection_scheduled",
                            "sample_collected",
                            "processing",
                            "result_ready",
                            "result_delivered",
                            "consultation_required",
                            "follow_up_scheduled",
                            "completed",
                            "cancelled"
                        ],
                        "example": "processing"
                    },
                    "actualResultDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian thực tế có kết quả",
                        "example": "2024-12-25T15:00:00Z"
                    },
                    "sampleCollectionDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian lấy mẫu",
                        "example": "2024-12-20T09:00:00Z"
                    },
                    "labNotes": {
                        "type": "string",
                        "description": "Ghi chú từ phòng lab",
                        "example": "Mẫu đạt chất lượng, quá trình xử lý bình thường"
                    },
                    "sampleCollectedBy": {
                        "type": "string",
                        "description": "Người lấy mẫu",
                        "example": "Y tá Nguyễn Văn A"
                    },
                    "labProcessedBy": {
                        "type": "string",
                        "description": "Phòng lab xử lý",
                        "example": "Lab XYZ - Kỹ thuật viên B"
                    },
                    "patientNotified": {
                        "type": "boolean",
                        "description": "Đã thông báo cho bệnh nhân",
                        "example": true
                    },
                    "resultEmailSent": {
                        "type": "boolean",
                        "description": "Đã gửi email kết quả",
                        "example": true
                    }
                }
            },
            "StiTestBookingRequest": {
                "type": "object",
                "properties": {
                    "patientId": {
                        "type": "string",
                        "description": "Patient ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "servicePackageId": {
                        "type": "string",
                        "description": "Service package ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "serviceIds": {
                        "description": "Array of service IDs",
                        "example": [
                            "123e4567-e89b-12d3-a456-426614174000"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "appointmentId": {
                        "type": "string",
                        "description": "Appointment ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "consultantId": {
                        "type": "string",
                        "description": "Consultant ID",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Additional notes",
                        "example": "Patient prefers morning appointment"
                    }
                },
                "required": [
                    "patientId"
                ]
            },
            "SampleInfoDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Loại mẫu",
                        "example": "Blood serum"
                    },
                    "condition": {
                        "type": "string",
                        "description": "Tình trạng mẫu",
                        "example": "Good quality"
                    },
                    "volume": {
                        "type": "string",
                        "description": "Thể tích mẫu",
                        "example": "5ml"
                    },
                    "collectionMethod": {
                        "type": "string",
                        "description": "Phương pháp lấy mẫu",
                        "example": "Venipuncture"
                    }
                },
                "required": [
                    "type",
                    "condition"
                ]
            },
            "TestResultItemDto": {
                "type": "object",
                "properties": {
                    "parameterName": {
                        "type": "string",
                        "description": "Tên chỉ số",
                        "example": "HIV"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Tên hiển thị",
                        "example": "HIV Antibody Test"
                    },
                    "category": {
                        "type": "string",
                        "description": "Nhóm chỉ số",
                        "example": "STI Tests"
                    },
                    "value": {
                        "description": "Giá trị kết quả",
                        "example": "Negative",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            }
                        ]
                    },
                    "unit": {
                        "type": "string",
                        "description": "Đơn vị đo",
                        "enum": [
                            "mg/dL",
                            "g/L",
                            "mmol/L",
                            "IU/mL",
                            "ng/mL",
                            "pg/mL",
                            "cells/μL",
                            "million/μL",
                            "thousand/μL",
                            "%",
                            "ratio",
                            "positive",
                            "negative",
                            "reactive",
                            "non_reactive",
                            "none"
                        ],
                        "example": "negative"
                    },
                    "referenceRange": {
                        "type": "object",
                        "description": "Khoảng tham chiếu bình thường",
                        "example": {
                            "normalValues": [
                                "Negative",
                                "Non-reactive"
                            ],
                            "description": "Normal range for HIV antibody test"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "Trạng thái kết quả",
                        "enum": [
                            "normal",
                            "abnormal",
                            "borderline",
                            "critical"
                        ],
                        "example": "normal"
                    },
                    "abnormalityLevel": {
                        "type": "string",
                        "description": "Mức độ bất thường",
                        "enum": [
                            "normal",
                            "slightly_abnormal",
                            "moderately_abnormal",
                            "severely_abnormal",
                            "critical"
                        ]
                    },
                    "notes": {
                        "type": "string",
                        "description": "Ghi chú"
                    },
                    "clinicalSignificance": {
                        "type": "string",
                        "description": "Ý nghĩa lâm sàng"
                    },
                    "methodUsed": {
                        "type": "string",
                        "description": "Phương pháp xét nghiệm"
                    },
                    "equipmentUsed": {
                        "type": "string",
                        "description": "Thiết bị sử dụng"
                    },
                    "labTechnician": {
                        "type": "string",
                        "description": "Kỹ thuật viên thực hiện"
                    }
                },
                "required": [
                    "parameterName",
                    "displayName",
                    "value",
                    "unit",
                    "status"
                ]
            },
            "LaboratoryInfoDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tên phòng lab",
                        "example": "ABC Medical Laboratory"
                    },
                    "address": {
                        "type": "string",
                        "description": "Địa chỉ"
                    },
                    "accreditation": {
                        "type": "string",
                        "description": "Chứng nhận"
                    },
                    "contactInfo": {
                        "type": "string",
                        "description": "Thông tin liên hệ"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "QualityControlDto": {
                "type": "object",
                "properties": {
                    "passed": {
                        "type": "boolean",
                        "description": "QC có pass không"
                    },
                    "issues": {
                        "description": "Các vấn đề QC",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reviewer": {
                        "type": "string",
                        "description": "Người review"
                    }
                },
                "required": [
                    "passed"
                ]
            },
            "TestResultDataDto": {
                "type": "object",
                "properties": {
                    "serviceType": {
                        "type": "string",
                        "description": "Loại dịch vụ y tế",
                        "enum": [
                            "sti_test",
                            "blood_test",
                            "urine_test",
                            "imaging",
                            "biopsy",
                            "genetic_test",
                            "hormone_test",
                            "allergy_test",
                            "cardiac_test",
                            "other"
                        ],
                        "example": "sti_test"
                    },
                    "testName": {
                        "type": "string",
                        "description": "Tên xét nghiệm",
                        "example": "Bộ xét nghiệm STI cơ bản"
                    },
                    "testCode": {
                        "type": "string",
                        "description": "Mã xét nghiệm nội bộ"
                    },
                    "sampleCollectedAt": {
                        "type": "string",
                        "description": "Thời gian lấy mẫu"
                    },
                    "analyzedAt": {
                        "type": "string",
                        "description": "Thời gian phân tích"
                    },
                    "reportedAt": {
                        "type": "string",
                        "description": "Thời gian báo cáo"
                    },
                    "sampleInfo": {
                        "description": "Thông tin mẫu",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SampleInfoDto"
                            }
                        ]
                    },
                    "results": {
                        "description": "Danh sách các kết quả",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TestResultItemDto"
                        }
                    },
                    "overallStatus": {
                        "type": "string",
                        "description": "Trạng thái tổng quan",
                        "enum": [
                            "normal",
                            "abnormal",
                            "inconclusive",
                            "critical"
                        ],
                        "example": "normal"
                    },
                    "summary": {
                        "type": "string",
                        "description": "Tóm tắt tổng quát"
                    },
                    "clinicalInterpretation": {
                        "type": "string",
                        "description": "Giải thích lâm sàng"
                    },
                    "recommendations": {
                        "description": "Khuyến nghị",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "laboratoryInfo": {
                        "description": "Thông tin phòng lab",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LaboratoryInfoDto"
                            }
                        ]
                    },
                    "qualityControl": {
                        "description": "Kiểm soát chất lượng",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QualityControlDto"
                            }
                        ]
                    }
                },
                "required": [
                    "serviceType",
                    "testName",
                    "results",
                    "overallStatus"
                ]
            },
            "CreateTestResultWithFileDto": {
                "type": "object",
                "properties": {
                    "appointmentId": {
                        "type": "string",
                        "description": "ID of the appointment this result belongs to (for online booking)",
                        "example": "Required if patientId and serviceId are not provided"
                    },
                    "patientId": {
                        "type": "string",
                        "description": "ID of the patient (for walk-in cases)",
                        "example": "Required if appointmentId is not provided"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "ID of the service (for walk-in cases)",
                        "example": "Required if appointmentId is not provided"
                    },
                    "resultData": {
                        "description": "Structured result data in standardized format",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TestResultDataDto"
                            }
                        ]
                    },
                    "resultSummary": {
                        "type": "string",
                        "description": "A brief summary of the result",
                        "example": "Normal glucose levels, high cholesterol."
                    },
                    "isAbnormal": {
                        "type": "boolean",
                        "description": "Flag indicating if the result is abnormal",
                        "default": false
                    },
                    "recommendation": {
                        "type": "string",
                        "description": "Recommendations from the consultant"
                    },
                    "followUpRequired": {
                        "type": "boolean",
                        "description": "Flag indicating if a follow-up is required",
                        "default": false
                    },
                    "followUpNotes": {
                        "type": "string",
                        "description": "Notes for follow-up actions or observations",
                        "example": "Patient should return in 2 weeks for re-evaluation."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The test result file (PDF report)"
                    }
                },
                "required": [
                    "resultData",
                    "isAbnormal",
                    "file"
                ]
            },
            "UpdateTestResultDto": {
                "type": "object",
                "properties": {}
            },
            "TestResultResponseDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID của test result"
                    },
                    "resultData": {
                        "description": "Dữ liệu kết quả xét nghiệm đã chuẩn hóa",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TestResultDataDto"
                            }
                        ]
                    },
                    "resultSummary": {
                        "type": "string",
                        "description": "Tóm tắt kết quả"
                    },
                    "isAbnormal": {
                        "type": "boolean",
                        "description": "Có bất thường không"
                    },
                    "recommendation": {
                        "type": "string",
                        "description": "Khuyến nghị"
                    },
                    "notificationSent": {
                        "type": "boolean",
                        "description": "Đã gửi thông báo chưa"
                    },
                    "followUpRequired": {
                        "type": "boolean",
                        "description": "Cần theo dõi không"
                    },
                    "followUpNotes": {
                        "type": "string",
                        "description": "Ghi chú theo dõi"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian tạo"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Thời gian cập nhật"
                    },
                    "appointment": {
                        "type": "object",
                        "description": "Thông tin appointment liên quan"
                    },
                    "service": {
                        "type": "object",
                        "description": "Thông tin service liên quan"
                    },
                    "user": {
                        "type": "object",
                        "description": "Thông tin user"
                    },
                    "documents": {
                        "description": "Thông tin documents (PDF, hình ảnh) liên quan",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notificationInfo": {
                        "type": "object",
                        "description": "Thông tin gửi thông báo"
                    }
                },
                "required": [
                    "id",
                    "resultData",
                    "isAbnormal",
                    "notificationSent",
                    "followUpRequired",
                    "createdAt",
                    "updatedAt"
                ]
            },
            "CreateSymptomDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "categoryId"
                ]
            },
            "UpdateSymptomDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "categoryId": {
                        "type": "string"
                    }
                }
            }
        }
    }
}